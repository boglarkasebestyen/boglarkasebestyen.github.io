{"version":3,"sources":["MyContext.js","reportWebVitals.js","Navbar.js","Card.js","Home.js","CreateAccount.js","Deposit.js","Withdraw.js","AllData.js","App.js","index.js"],"names":["MyContext","createContext","MyContextProvider","children","useState","successMessageVisible","setSuccessMessageVisible","name","setName","email","setEmail","password","setPassword","nameError","setNameError","emailError","setEmailError","passwError","setPasswError","users","setUsers","nameErrorStr","emailErrorStr","passwordErrorStr","validate","length","validateName","validateEmail","validatePassword","newName","match","newEmail","emailFormat","newPassword","depositAmount","setDepositAmount","balance","setBalance","depositError","setDepositError","depositArr","setDepositArr","validateNr","newValue","setWithdrawError","withdrawAmount","setWithdrawAmount","withdrawError","withdrawSuccessMessageVisible","setWithdrawSuccessMessageVisible","withdrawArr","setWithdrawArr","defaultContext","handleClick","e","newUser","concat","handleNameChange","currentTarget","value","handleEmailChange","handlePasswordChange","clearForm","handleChange","target","slice","submitDeposit","currentValue","parseFloat","newDeposit","showHideSuccessMessage","className","withdrawHandleChange","submitWithdrawal","newWithdraw","showHideSuccessMessageWithdraw","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NavBar","location","useLocation","pages","id","text","tooltipText","href","getClass","classIndex","currentPage","pathname","split","pop","type","map","item","index","effect","Card","props","bgcolor","txtcolor","header","title","body","Home","src","alt","CreateAccount","useContext","onClick","placeholder","onChange","disabled","Deposit","Withdraw","AllData","currentTime","Date","toLocaleString","user","amount","App","Navbar","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38123980.chunk.js","sourcesContent":["import React, {createContext, useState} from \"react\";\n\nconst MyContext = createContext();\n\nfunction MyContextProvider({children}) {\n\n    //from CREATE ACCOUNT COMPONENT\n    const [successMessageVisible, setSuccessMessageVisible] = useState(false); \n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [nameError, setNameError] = useState(\"\");\n    const [emailError, setEmailError] = useState(\"\");\n    const [passwError, setPasswError] = useState(\"\");\n    const [users, setUsers] = useState([]);\n\n    let nameErrorStr = \"\";\n    let emailErrorStr = \"\";\n    let passwordErrorStr = \"\";\n\n\n    //NO INPUT + ADDITIONAL VALIDATION\n    const validate = () => {\n\t\t\tsetEmailError(\"\");\n\t\t\tsetNameError(\"\");\n\t\t\tsetPasswError(\"\")\n\n\t\t\tif (!email) {\n\t\t\t\t\temailErrorStr = \"Oops! Your email can't be blank.\";\n\t\t\t\t\t//additional: email length \n\t\t\t} else if (email.length == 1) {\n\t\t\t\t\temailErrorStr = \"Email must be longer than that.\";\n\t\t\t}\n\n\t\t\tif (!name) {\n\t\t\t\t\tnameErrorStr = \"Oops! Your name can't be blank.\";\n\t\t\t\t\t//additional: name length \n\t\t\t} else  if (name.length < 3) {\n\t\t\t\t\tnameErrorStr = \"Name must be longer than that.\";\n\t\t\t} \n\t\t\t\n\t\t\tif (!password) {\n\t\t\t\t\tpasswordErrorStr = \"Oops! Your password can't be blank.\";\n\t\t\t}\n\n\t\t\t//validate if there's no error message \n\t\t\tif (nameErrorStr == \"\") {\n\t\t\t\t\tvalidateName(name);\n\t\t\t}\n\n\t\t\tif (emailErrorStr == \"\") {\n\t\t\t\t\tvalidateEmail(email);\n\t\t\t}\n\t\t\t\n\t\t\tif (passwordErrorStr == \"\") {\n\t\t\t\t\tvalidatePassword(password);\n\t\t\t}\n\n\t\t\tsetNameError(nameErrorStr);\n\t\t\tsetEmailError(emailErrorStr);\n\t\t\tsetPasswError(passwordErrorStr);\n\t\t\treturn nameErrorStr === \"\" && emailErrorStr === \"\" && passwordErrorStr === \"\"; //returns true and validate() is executed\n    }; \n\n    const validateName = newName => {\n\t\t\t//additonal: limiting input to the letters of the English alphabet, including capital letters\n\t\t\t\t\tif(!newName.match(/^[a-zA-Z][a-zA-Z\\s]*$/)) {\n\t\t\t\t\tnameErrorStr = \"Enter only letters\";\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n    };\n\n    //additional: email formatting\n    const validateEmail = newEmail => {\n\t\t\tlet emailFormat = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,4}$/; \n\t\t\tlet isValidFormat = str => {\n\t\t\t\t\treturn str.match(emailFormat);\n\t\t\t}\n\n\t\t\tif (!isValidFormat(newEmail)) {\n\t\t\t\t\temailErrorStr = \"Oops! Invalid email.\";\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n    };\n\n    const validatePassword = newPassword => {\n\t\t\tif (newPassword.length == 1 || newPassword.length < 8) {\n\t\t\t\t\tpasswordErrorStr = \"Password must be longer than that.\";\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n    };\n\n    //validation on onClick / Create Account button\n    const handleClick = e => {\n\t\t\tif (validate()) { \n\t\t\t\t\tsetSuccessMessageVisible(true); \n\t\t\t\t\t//adding all new users, for \"All Data\"\n\t\t\t\t\tlet newUser = {\n\t\t\t\t\t\t\t\"name\": name,\n\t\t\t\t\t\t\t\"email\": email,\n\t\t\t\t\t\t\t\"password\": password\n\t\t\t\t\t};\n\t\t\t\t\tsetUsers(users => users.concat(newUser));\n\t\t\t} else {\n\t\t\treturn;\n\t\t\t}\n    };\n\n    //FORM INPUT  \n    const handleNameChange = e => {\n\t\t\t// setName(e.currentTarget.value); //if there's no letter validation\n\t\t\tlet newName = e.currentTarget.value;\n\t\t\tif (!newName || validateName(newName)) {\n\t\t\t\t\tsetName(newName);\n\t\t\t}\n    };\n\n    const handleEmailChange = e => {\n      setEmail(e.currentTarget.value);\n    };\n\n    const handlePasswordChange = e => {        \n      setPassword(e.currentTarget.value);\n    };\n\n    //firing when creating new account\n    const clearForm = () => {\n\t\t\tsetName(\"\");\n\t\t\tsetEmail(\"\");\n\t\t\tsetPassword(\"\");\n\t\t\tsetSuccessMessageVisible(false);\n    };\n\n\n    // ------------------------------------------------------\n\n    //from DEPOSIT COMPONENT\n    let [depositAmount, setDepositAmount] = useState(0.0);\n    let [balance, setBalance] = useState(0.0);\n    let [depositError, setDepositError] = useState(\"\");\n    let [depositArr, setDepositArr] = useState([]);\n    \n    let depositErrorStr = \"\";\n\n    //validating numbers for deposit and withdraw\n    const validateNr = newValue => {\n\t\t\t//clear error when there's new input\n\t\t\tsetDepositError(\"\");\n\t\t\tsetWithdrawError(\"\");\n\n\t\t\tif(!newValue.match(/^([(0-9)]+\\.)*([(0-9)]+)*$/)) { //this regex matches numbers from 0 to 9 and + decimal numbers\n\t\t\t\t\tdepositErrorStr = \"Enter numbers only.\";\n\t\t\t\t\tsetDepositError(depositErrorStr);\n\t\t\t\t\treturn false; //didn't validate\n\t\t\t} \n\t\t\treturn true; //did validate\n    };\n\n    //input\n    const handleChange = e => {\n\t\t\tlet newValue = e.target.value;\n\t\t\tif (validateNr(newValue) || !newValue) { \n\t\t\t\t\tsetDepositAmount(newValue);\n\t\t\t} else {\n\t\t\t\t\t\te.target.value = newValue.slice(0, -1); //when we delete the numbers, it cuts off the last element if that's not a number\n\t\t\t}     \n\t\t\t\tsetSuccessMessageVisible(false);   \n    };\n\n    //submit + additional validation \n    const submitDeposit = currentValue => {\n\t\t\tif (currentValue == 0.0) {\n\t\t\t\t\tdepositErrorStr = \"Amount must be higher than 0.\";\n\t\t\t\t\tsetDepositError(depositErrorStr);\n\t\t\t\t\tsetWithdrawSuccessMessageVisible(false);\n\t\t\t\t\treturn;\n        }\n\n\t\t\tif (currentValue.length >= 7) {\n\t\t\t\tdepositErrorStr = \"Amount must be lower than that.\";\n\t\t\t\tsetDepositError(depositErrorStr);\n\t\t\t\tsetWithdrawSuccessMessageVisible(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//total amount / balance\n\t\t\tbalance += parseFloat(currentValue);\n\t\t\tsetBalance(balance);\n\t\t\tsetSuccessMessageVisible(true);\n\t\t\tsetDepositAmount(0.0)\n\n\t\t\t//all new deposits for \"All Data\"\n\t\t\tlet newDeposit = {\n\t\t\t\t\"depositAmount\": depositAmount\n\t\t\t};\n\n\t\t\tsetDepositArr(depositArr => depositArr.concat(newDeposit));\n    };\n\n    let showHideSuccessMessage = () => {\n\t\t\tif (successMessageVisible) {\n\t\t\t\treturn (\n\t\t\t\t\t<div className=\"message mt-4\">\n\t\t\t\t\t\t\t<h6>Your deposit was received!</h6>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn;\n    };\n\n    // ------------------------------------------------------\n\n    //from WITHDRAW COMPONENT\n    let [withdrawAmount, setWithdrawAmount] = useState(0.0);\n    let [withdrawError, setWithdrawError] = useState(\"\");\n    const [withdrawSuccessMessageVisible, setWithdrawSuccessMessageVisible] = useState(false); \n    let [withdrawArr, setWithdrawArr] = useState([]);\n\n    let withdrawErrorStr = \"\";\n\n    //input\n    const withdrawHandleChange = e => {\n\t\t\tlet newValue = e.target.value;\n\t\t\tif (validateNr(newValue) || !newValue) { \n\t\t\t\twithdrawErrorStr = \"Enter numbers only.\" \n\t\t\t\tsetWithdrawAmount(newValue);\n\t\t\t} else {\n\t\t\t\te.target.value = newValue.slice(0, -1); //when we delete the numbers, it cuts off the last element if that's not a number\n\t\t\t} \n\t\t\tsetWithdrawSuccessMessageVisible(false);   \n    };\n\n    //submit + additional validation\n     const submitWithdrawal = currentValue => {\n\t\t\tif (currentValue == 0.0) {\n\t\t\t\twithdrawErrorStr = \"Amount must be higher than 0.\";\n\t\t\t\tsetWithdrawError(withdrawErrorStr);\n\t\t\t\tsetWithdrawSuccessMessageVisible(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (currentValue.length >= 7) {\n\t\t\t\twithdrawErrorStr = \"Amount must be lower than that.\";\n\t\t\t\tsetWithdrawError(withdrawErrorStr);\n\t\t\t\tsetWithdrawSuccessMessageVisible(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (currentValue > balance) {\n\t\t\t\twithdrawErrorStr = \"Amount higher than the account balance.\";\n\t\t\t\tsetWithdrawError(withdrawErrorStr);\n\t\t\t\tsetWithdrawSuccessMessageVisible(false);\n\t\t\t} else {\n\t\t\t\tsetBalance(balance - parseFloat(currentValue));\n\t\t\t\tsetWithdrawError(\"\");\n\t\t\t\tsetWithdrawSuccessMessageVisible(true);\n\t\t\t\tsetWithdrawAmount(0.0)\n\t\t\t\t\n\t\t\t\t//all withdrawals, for \"All Data\"\n\t\t\t\tlet newWithdraw = {\n\t\t\t\t\t\"withdrawAmount\": withdrawAmount\n\t\t\t\t};\n\n\t\t\t\tsetWithdrawArr(withdrawArr => withdrawArr.concat(newWithdraw));\n\t\t\t}\n  \t};\n\n    let showHideSuccessMessageWithdraw = () => {\n\t\t\tif (withdrawSuccessMessageVisible) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"message mt-4\">\n\t\t\t\t\t\t\t<h6>Your withdrawal was succesful!</h6>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t}\n\t\t\treturn;\n    };\n\n\n    const defaultContext = {\n\t\t\t//state:\n\t\t\tname,\n\t\t\temail,\n\t\t\tpassword,\n\t\t\tnameError,\n\t\t\temailError,\n\t\t\tpasswError,\n\t\t\tdepositAmount,\n\t\t\tbalance,\n\t\t\tdepositError,\n\t\t\tsuccessMessageVisible,\n\t\t\twithdrawSuccessMessageVisible,\n\t\t\twithdrawAmount,\n\t\t\twithdrawError,\n\t\t\tusers,\n\t\t\tdepositArr,\n\t\t\twithdrawArr,\n\t\t\t//functions:\n\t\t\tvalidate,\n\t\t\thandleClick,\n\t\t\thandleNameChange,\n\t\t\thandleEmailChange,\n\t\t\thandlePasswordChange,\n\t\t\tclearForm,\n\t\t\tvalidateNr,\n\t\t\thandleChange,\n\t\t\tsubmitDeposit,\n\t\t\tshowHideSuccessMessage,\n\t\t\twithdrawHandleChange,\n\t\t\tsubmitWithdrawal,\n\t\t\tshowHideSuccessMessageWithdraw\n    };\n\n    return (\n      <MyContext.Provider value={defaultContext}>\n        {children}\n      </MyContext.Provider>\n    )\n}\n\nexport {MyContext, MyContextProvider};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nfunction NavBar() {\r\n  /* Highlighting: The navigation bar highlights the element of the current page the user is on. */\r\n  /* Highlight the current page the user is on / active page, even on refresh */\r\n  const location = useLocation();\r\n  \r\n  // an array of objects; pages[classIndex] is enough to access it\r\n  const pages = [{id:\"home\", text: \"Welcome to Bad Bank\", tooltipText: \"Home Page\", href:\"#/\"},\r\n              {id:\"createAccount\", text: \"Open Acount\", tooltipText: \"Open your Bad Bank® account\", href:\"#/createaccount/\"},\r\n              {id:\"deposit\",text: \"Deposit\", tooltipText: \"Deposit cash & checks on any device\", href:\"#/deposit/\"},\r\n              {id:\"withdraw\",text: \"Withdraw\", tooltipText: \"Withdraw cash & checks on any device\", href:\"#/withdraw/\"},\r\n              {id:\"allData\",text: \"All Data\", tooltipText: \"All your transactions and more\", href:\"#/alldata/\"},\r\n  ];\r\n\r\n  const getClass = (classIndex) => {\r\n    const currentPage = location.pathname; //accessing pathname from the location object\r\n    const renderedPage = pages[classIndex].href.split(\"#\").pop(); //from which we'll get \"withdraw\", \"deposit\", etc.\r\n    return renderedPage === currentPage ? \"current\" : \"\";\r\n  }\r\n\r\n  return (\r\n    <>    \r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n\r\n        {/* BUTTON */}\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          {/* hamburger icon */}\r\n          <span className=\"navbar-toggler-icon\"></span> \r\n        </button>\r\n\r\n        {/*  main container: containing nav items from item 1 till length of page */}\r\n        <div className=\"collapse navbar-collapse nav-container\" id=\"navbarNav\">\r\n\r\n          {/* container containing nav items only */}\r\n          <ul className=\"navbar-nav navitem-container\">\r\n\r\n            {/* nav items: */}\r\n            {/* Highlighting: The navigation bar highlights the element of the current page the user is on. */}\r\n            {/* Tooltip implementation:\r\n            When a user hovers their cursor over a navigation bar element, they see a few words describing that page. */}\r\n            \r\n            {pages.map((item, index) => \r\n              <li key={index} className=\"nav-item\">\r\n                <a data-tip data-for={item.id} className={`nav-link pl-2 pr-2 m-1 ${getClass(index)}`} href={item.href}>{item.text}</a>\r\n                <ReactTooltip id={item.id} effect='solid'>\r\n                  <span>{item.tooltipText}</span>\r\n                </ReactTooltip>\r\n                {/* note to self: data-for={item.id} and ReactTooltip id={item.id} need to be the same */}\r\n              </li>\r\n            )}\r\n          </ul>\r\n          {/* end of container for nav items */}\r\n        </div>\r\n        {/* end of main container */}\r\n      </nav>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NavBar;\r\n\r\n","import React from \"react\";\r\n\r\nfunction Card(props){\r\n    function classes() {\r\n      const bg  = props.bgcolor ? ' bg-' + props.bgcolor : ' ';\r\n      const txt = props.txtcolor ? ' text-' + props.txtcolor: ' text-white';\r\n      return 'card mb-5 ' + bg + txt;\r\n    }\r\n    return (\r\n      <div className={`cardContainer ${classes()}`}>\r\n        <div className=\"card-header\">{props.header}</div>\r\n        <div className=\"card-body mb-2\">\r\n          {props.title && (<h5 className=\"card-title mb-4\">{props.title}</h5>)}\r\n          {props.text && (<p className=\"card-text\">{props.text}</p>)}\r\n          {props.body}\r\n        </div>\r\n      </div>      \r\n    );    \r\n  }\r\n\r\n  export default Card;","import React from 'react';\r\nimport Card from \"./Card\"\r\n\r\nfunction Home(){\r\n  return (\r\n    <Card\r\n      txtcolor=\"#000\"\r\n      header=\"Bad Bank® America\"\r\n      title=\"Bad Bank® is here to help with your decisions along the way!\"\r\n      text=\"Get started by using the navigation bar above\"\r\n      body={(<img src=\"https://cdn.pixabay.com/photo/2020/02/18/11/03/bank-4859142_960_720.png\" className=\"img-fluid\" alt=\"bank\"/>)}\r\n    />    \r\n  );  \r\n}\r\n\r\nexport default Home;","import React, {useContext} from \"react\";\nimport {MyContext} from \"./MyContext\";\nimport Card from \"./Card\";\n\nfunction CreateAccount() {\n\n\tconst {\n\t\t//state\n\t\tname,\n\t\temail,\n\t\tpassword,\n\t\tnameError,\n\t\temailError,\n\t\tpasswError,\n\t\tsuccessMessageVisible,\n\t\t//functions\n\t\thandleClick,\n\t\thandleNameChange,\n\t\thandleEmailChange,\n\t\thandlePasswordChange,\n\t\tclearForm\n\t} = useContext(MyContext);\n\n\treturn (\n\t\t<Card\n\t\t\t\tbgcolor=\"info\"\n\t\t\t\theader=\"Open Account\"\n\t\t\t\tbody={!successMessageVisible ? (  //if not visible, create account\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<h5 className=\"create mb-4\">Open an account that fits your needs!</h5>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<div className=\"error\">{nameError}</div>\n\t\t\t\t\t\t\t\t\t<div className=\"error\">{emailError}</div>\n\t\t\t\t\t\t\t\t\t<div className=\"error\">{passwError}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<h6 className=\"name mt-4\">Name</h6>\n\t\t\t\t\t\t\t<input type=\"input\" className=\"form-control\" id=\"name\" placeholder=\"Your name is...\" value={name} onChange={handleNameChange}/><br/>\n\t\t\t\t\t\t\t<h6>Email address</h6>\n\t\t\t\t\t\t\t<input type=\"input\" className=\"form-control\" id=\"email\" placeholder=\"Your email address is...\" value={email} onChange={handleEmailChange}/><br/>\n\t\t\t\t\t\t\t<h6>Password</h6>\n\t\t\t\t\t\t\t<input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Create a password\" value={password} onChange={handlePasswordChange}/>\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t<button type=\"submit\" disabled={!name && !email && !password} className=\"submitBtn btn btn-light\" onClick={e => handleClick()} >Create Account</button>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t):( //if visible, hide \"previous page\", show success msg and create a new account\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className=\"accMessage mb-4\">\n\t\t\t\t\t\t\t\t\t<h6>Account succesfully created!</h6>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"submitBtn btn btn-light\" onClick={clearForm}>Add another account</button>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t/>\n\t)\n}\n\nexport default CreateAccount;","import React, {useContext} from \"react\";\r\nimport {MyContext} from \"./MyContext\";\r\nimport Card from \"./Card\";\r\n\r\nfunction Deposit() {\r\n\r\n  const {\r\n    //state:\r\n    depositAmount,\r\n    balance,\r\n    depositError,\r\n    //functions:\r\n    handleChange,\r\n    submitDeposit,\r\n    showHideSuccessMessage\r\n  } = useContext(MyContext);\r\n\r\n  return (\r\n    <Card\r\n        bgcolor=\"info\"\r\n        header=\"Deposit\"\r\n        body= { \r\n          <>  \r\n\t\t\t\t\t\t<h5 className=\"deposit mb-4\">Skip extra trips to the bank and deposit your money online!</h5>\r\n\t\t\t\t\t\t<h6 className=\"deposit mb-4\">Your current balance is: ${balance}</h6>\r\n\t\t\t\t\t\t<h6>The amount you wish to deposit:</h6>\r\n\t\t\t\t\t\t<input type=\"input\" className=\"form-control\" id=\"depositAmount\" placeholder=\"Amount\" onChange={handleChange}/>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div className=\"error mb-3\">{depositError}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t<button type=\"submit\" disabled={!depositAmount} className=\"submitBtn btn btn-light\" onClick={() => submitDeposit(depositAmount)}>Deposit</button>            \r\n\t\t\t\t\t\t{showHideSuccessMessage()}\r\n\t\t\t\t\t</>\r\n        }  \r\n    />\r\n  )\r\n}\r\n\r\nexport default Deposit;\r\n","import React, {useContext} from \"react\";\r\nimport {MyContext} from \"./MyContext\";\r\nimport Card from \"./Card\";\r\n\r\n\r\nfunction Withdraw() {\r\n  const {\r\n    //state:\r\n    balance,\r\n    //functions:\r\n    withdrawAmount,\r\n    withdrawHandleChange,\r\n    withdrawError,\r\n    submitWithdrawal,\r\n    showHideSuccessMessageWithdraw\r\n  } = useContext(MyContext);\r\n\r\n  return (\r\n    <Card\r\n\t\t\tbgcolor=\"info\"\r\n\t\t\theader=\"Withdraw\"\r\n\t\t\tbody={\r\n\t\t\t\t<>  \r\n\t\t\t\t\t<h5 className=\"deposit mb-4\">Skip extra trips to the bank and withdraw your money online!</h5>\r\n\t\t\t\t\t<h6 className=\"balance mb-4\">Your current balance is: ${balance}</h6>\r\n\t\t\t\t\t<h6>The amount you wish to withdraw:</h6>\r\n\t\t\t\t\t<input type=\"input\" className=\"form-control\" id=\"email\" placeholder=\"Amount\" onChange={withdrawHandleChange}/>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"error mb-3\">{withdrawError}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<button type=\"submit\" disabled={!withdrawAmount} className=\"submitBtn btn btn-light\" onClick={() => submitWithdrawal(withdrawAmount)}>Withdraw</button>\r\n\t\t\t\t\t{showHideSuccessMessageWithdraw()}\r\n\t\t\t\t</>\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default Withdraw;\r\n","import React, {useContext } from 'react';\r\nimport {MyContext} from \"./MyContext\";\r\nimport Card from \"./Card\";\r\n\r\n\r\nfunction AllData() {\r\n\tconst {users, depositArr, withdrawArr} = useContext(MyContext);\r\n\tlet currentTime = new Date().toLocaleString();\r\n\treturn (\r\n\t\t// we need Fragment, otherwise it returns an object\r\n\t\t<>  \r\n\t\t\t{users.map((user) => \r\n\t\t\t\t<>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tbgcolor=\"info\"\r\n\t\t\t\t\t\theader=\"Your Accounts\"\r\n\t\t\t\t\t\tbody={\r\n\t\t\t\t\t\t\t\t<>  \r\n\t\t\t\t\t\t\t\t\t<h5 className=\"balance mb-3\">Opened accounts:</h5>\r\n\t\t\t\t\t\t\t\t\t<div className=\"alldata\">\r\n\t\t\t\t\t\t\t\t\t\t<h6>Creation date: {currentTime}</h6>\r\n\t\t\t\t\t\t\t\t\t\t<h6>Name: {user.name}</h6>\r\n\t\t\t\t\t\t\t\t\t\t<h6>Email address: {user.email}</h6>\r\n\t\t\t\t\t\t\t\t\t\t<h6>Password: {user.password}</h6>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\r\n\t\t\t{depositArr.map((amount) => \r\n\t\t\t\t<>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tbgcolor=\"info\"\r\n\t\t\t\t\t\theader=\"Your Transactions\"\r\n\t\t\t\t\t\tbody={\r\n\t\t\t\t\t\t\t\t<>  \r\n\t\t\t\t\t\t\t\t\t<h5 className=\"balance mb-3\">Deposit:</h5>\r\n\t\t\t\t\t\t\t\t\t<div className=\"alldata\">\r\n\t\t\t\t\t\t\t\t\t\t<h6>Creation date: {currentTime}</h6>\r\n\t\t\t\t\t\t\t\t\t\t<h6>Amount: ${amount.depositAmount}</h6>\r\n\t\t\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t)}\r\n\r\n\t\t{withdrawArr.map((value) => \r\n\t\t\t<>\r\n\t\t\t\t<Card \r\n\t\t\t\t\tbgcolor=\"info\"\r\n\t\t\t\t\theader=\"Your Transactions\"\r\n\t\t\t\t\tbody={\r\n\t\t\t\t\t\t\t<>  \r\n\t\t\t\t\t\t\t\t<h5 className=\"balance mb-3\">Withdraw:</h5>\r\n\t\t\t\t\t\t\t\t<div className=\"alldata\">\r\n\t\t\t\t\t\t\t\t\t<h6>Creation date: {currentTime}</h6>\r\n\t\t\t\t\t\t\t\t\t<h6>Amount: ${value.withdrawAmount}</h6>\r\n\t\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t\t<br/>\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</>\r\n\t) //return\r\n}; //function\r\n\r\n\t\r\nexport default AllData;\r\n\r\n\r\n\r\n","import React from \"react\";\nimport {HashRouter, Route} from \"react-router-dom\";\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport Navbar from \"./Navbar\";\nimport Home from \"./Home\";\nimport CreateAccount from \"./CreateAccount\";\nimport Deposit from \"./Deposit\";\nimport Withdraw from \"./Withdraw\";\nimport AllData from './AllData';\n\nfunction App() {\n\treturn (\n\t\t<HashRouter>\n\t\t\t<Navbar/>\n\t\t\t<div className=\"container\"> \n\t\t\t\t<Route path=\"/\" exact component={Home} />\n\t\t\t\t<Route path=\"/CreateAccount/\" component={CreateAccount} />\n\t\t\t\t<Route path=\"/Deposit/\" component={Deposit} />\n\t\t\t\t<Route path=\"/Withdraw/\" component={Withdraw} />\n\t\t\t\t<Route path=\"/AllData/\" component={AllData} />\n\t\t\t</div>\n\t\t</HashRouter>\n\t);\n}\n\nreportWebVitals();\n\nexport default App;","import ReactDOM from \"react-dom\";\nimport React from 'react';\nimport {MyContextProvider} from './MyContext';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <MyContextProvider>\n    <App/>\n  </MyContextProvider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}