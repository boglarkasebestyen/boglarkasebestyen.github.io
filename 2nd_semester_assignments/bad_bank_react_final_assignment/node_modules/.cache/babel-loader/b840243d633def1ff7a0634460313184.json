{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/2nd semester/bad_bank_assignment/bad_bank_react/src/CreateAccount.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { MyContext } from \"./MyContext\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CreateAccount() {\n  _s();\n\n  // const [successMessageVisible, setSuccessMessageVisible] = useState(false); //instead of \"show\" initialized with true...\n  // // const [status, setStatus] = useState(\"\");\n  // let [name, setName] = useState(\"\");\n  // let [email, setEmail] = useState(\"\");\n  // let [password, setPassword] = useState(\"\");\n  // let [nameError, setNameError] = useState(\"\");\n  // let [emailError, setEmailError] = useState(\"\");\n  // let [passwError, setPasswError] = useState(\"\");\n  const {\n    //state\n    name,\n    email,\n    password,\n    nameError,\n    emailError,\n    passwError,\n    successMessageVisible,\n    //functions\n    handleClick,\n    handleNameChange,\n    handleEmailChange,\n    handlePasswordChange,\n    clearForm\n  } = useContext(MyContext); // let nameErrorStr = \"\";\n  // let emailErrorStr = \"\";\n  // let passwordErrorStr = \"\";\n  // //NO INPUT + ADDITIONAL VALIDATION\n  // const validate = () => {\n  //     setEmailError(\"\");\n  //     setNameError(\"\");\n  //     setPasswError(\"\")\n  //     if (!email) {\n  //         emailErrorStr = \"Oops! Your email can't be blank.\";\n  //         //additional: email length \n  //     } else if (email.length == 1) {\n  //         emailErrorStr = \"Email must be longer than that.\";\n  //     }\n  //     if (!name) {\n  //         nameErrorStr = \"Oops! Your name can't be blank.\";\n  //         //additional: name length \n  //     } else  if (name.length < 3) {\n  //         nameErrorStr = \"Name must be longer than that.\";\n  //     } \n  //     if (!password) {\n  //         passwordErrorStr = \"Oops! Your password can't be blank.\";\n  //     }\n  //     if (nameErrorStr == \"\") {\n  //         validateName(name);\n  //     }\n  //     if (emailErrorStr == \"\") {\n  //         validateEmail(email);\n  //     }\n  //     if (passwordErrorStr == \"\") {\n  //         validatePassword(password);\n  //     }\n  //     setNameError(nameErrorStr);\n  //     setEmailError(emailErrorStr);\n  //     setPasswError(passwordErrorStr);\n  //     return nameErrorStr === \"\" && emailErrorStr === \"\" && passwordErrorStr === \"\"; //returns true and validate() is executed\n  // } \n  // const validateName = newName => {\n  //     //limiting input to the letters of the English alphabet\n  //     if(!newName.match(/^[a-z][a-z\\s]*$/)) {\n  //         nameErrorStr = \"Enter only letters\";\n  //         return false;\n  //     }\n  //     return true;\n  // }\n  // const validateEmail = newEmail => {\n  //     let emailFormat = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,4}$/; \n  //     //email format function\n  //     let isValidFormat = str => {\n  //         return str.match(emailFormat);\n  //     }\n  //     if (!isValidFormat(newEmail)) {\n  //         emailErrorStr = \"Oops! Invalid email.\";\n  //         return false;\n  //     }\n  //     return true;\n  // }\n  // const validatePassword = newPassword => {\n  //     if (newPassword.length == 1 || newPassword.length < 8) {\n  //         passwordErrorStr = \"Password must be longer than that.\";\n  //         return false;\n  //     }\n  //     return true;\n  // }\n  // //validation on onClick / Create Account button\n  // const handleClick = e => {\n  //     if (validate()) { //if there's validation\n  //         console.log(\"validate was called\")\n  //         setSuccessMessageVisible(true); //do this\n  //     } else {\n  //         return;\n  //     }\n  // }\n  //dunno what this does, GOTTA GET BACK HERE\n  // context.users.push({name, email, password, balance:100});\n  // ez kell\n  // context.users.push({name, email, password});\n  // setShow(false);\n  // //form input \n  // //can't have same function for all 3 as in the helper code I got (right?)\n  // const handleNameChange = e => {\n  //     // setName(e.currentTarget.value); //if there's no letter validation\n  //     let newName = e.currentTarget.value;\n  //     if (!newName || validateName(newName)) {\n  //         setName(newName);\n  //     }\n  // }\n  // const handleEmailChange = e => {\n  //     setEmail(e.currentTarget.value);\n  // }\n  // const handlePasswordChange = e => {        \n  //     setPassword(e.currentTarget.value);\n  // }\n  // const clearForm = () => {\n  //     setName(\"\");\n  //     setEmail(\"\");\n  //     setPassword(\"\");\n  //     setSuccessMessageVisible(false);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bgcolor: \"info\",\n    header: \"Open Account\",\n    body: !successMessageVisible ?\n    /*#__PURE__*/\n    //if it's not visible, create account\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"create mb-4\",\n        children: \"Open an account that fits your needs!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: nameError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: emailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: passwError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"name mt-4\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"input\",\n        className: \"form-control\",\n        id: \"name\",\n        placeholder: \"Your name is...\",\n        value: name,\n        onChange: handleNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 148\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"input\",\n        className: \"form-control\",\n        id: \"email\",\n        placeholder: \"Your email address is...\",\n        value: email,\n        onChange: handleEmailChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 160\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        id: \"password\",\n        placeholder: \"Create a password\",\n        value: password,\n        onChange: handlePasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 165\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !name && !email && !password,\n        className: \"submitBtn btn btn-light\",\n        onClick: e => handleClick(),\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) :\n    /*#__PURE__*/\n    //if it's visible, hide \"previous page\", show success msg and you can create a new account\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accountMsg mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Account succesfully created!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submitBtn btn btn-light\",\n        onClick: clearForm,\n        children: \"Add another account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateAccount, \"WekgcKLd7jk77VDm7umLmzqeHRs=\");\n\n_c = CreateAccount;\nexport default CreateAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"sources":["/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/2nd semester/bad_bank_assignment/bad_bank_react/src/CreateAccount.js"],"names":["React","useContext","MyContext","Card","CreateAccount","name","email","password","nameError","emailError","passwError","successMessageVisible","handleClick","handleNameChange","handleEmailChange","handlePasswordChange","clearForm","e"],"mappings":"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","sourcesContent":["import React, {useContext} from \"react\";\nimport { MyContext } from \"./MyContext\";\nimport Card from \"./Card\";\n\nfunction CreateAccount() {\n    // const [successMessageVisible, setSuccessMessageVisible] = useState(false); //instead of \"show\" initialized with true...\n    // // const [status, setStatus] = useState(\"\");\n    // let [name, setName] = useState(\"\");\n    // let [email, setEmail] = useState(\"\");\n    // let [password, setPassword] = useState(\"\");\n    // let [nameError, setNameError] = useState(\"\");\n    // let [emailError, setEmailError] = useState(\"\");\n    // let [passwError, setPasswError] = useState(\"\");\n\n    const {\n        //state\n        name,\n        email,\n        password,\n        nameError,\n        emailError,\n        passwError,\n        successMessageVisible,\n        //functions\n        handleClick,\n        handleNameChange,\n        handleEmailChange,\n        handlePasswordChange,\n        clearForm,\n    } = useContext(MyContext);\n\n\n    // let nameErrorStr = \"\";\n    // let emailErrorStr = \"\";\n    // let passwordErrorStr = \"\";\n\n    // //NO INPUT + ADDITIONAL VALIDATION\n    // const validate = () => {\n    //     setEmailError(\"\");\n    //     setNameError(\"\");\n    //     setPasswError(\"\")\n\n    //     if (!email) {\n    //         emailErrorStr = \"Oops! Your email can't be blank.\";\n    //         //additional: email length \n    //     } else if (email.length == 1) {\n    //         emailErrorStr = \"Email must be longer than that.\";\n    //     }\n    //     if (!name) {\n    //         nameErrorStr = \"Oops! Your name can't be blank.\";\n    //         //additional: name length \n    //     } else  if (name.length < 3) {\n    //         nameErrorStr = \"Name must be longer than that.\";\n    //     } \n        \n    //     if (!password) {\n    //         passwordErrorStr = \"Oops! Your password can't be blank.\";\n    //     }\n\n    //     if (nameErrorStr == \"\") {\n    //         validateName(name);\n    //     }\n\n    //     if (emailErrorStr == \"\") {\n    //         validateEmail(email);\n    //     }\n        \n    //     if (passwordErrorStr == \"\") {\n    //         validatePassword(password);\n    //     }\n\n    //     setNameError(nameErrorStr);\n    //     setEmailError(emailErrorStr);\n    //     setPasswError(passwordErrorStr);\n    //     return nameErrorStr === \"\" && emailErrorStr === \"\" && passwordErrorStr === \"\"; //returns true and validate() is executed\n    // } \n\n    // const validateName = newName => {\n    //     //limiting input to the letters of the English alphabet\n    //     if(!newName.match(/^[a-z][a-z\\s]*$/)) {\n    //         nameErrorStr = \"Enter only letters\";\n    //         return false;\n    //     }\n    //     return true;\n    // }\n    \n    // const validateEmail = newEmail => {\n    //     let emailFormat = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,4}$/; \n    //     //email format function\n    //     let isValidFormat = str => {\n    //         return str.match(emailFormat);\n    //     }\n\n    //     if (!isValidFormat(newEmail)) {\n    //         emailErrorStr = \"Oops! Invalid email.\";\n    //         return false;\n    //     }\n    //     return true;\n    // }\n\n    // const validatePassword = newPassword => {\n    //     if (newPassword.length == 1 || newPassword.length < 8) {\n    //         passwordErrorStr = \"Password must be longer than that.\";\n    //         return false;\n    //     }\n    //     return true;\n    // }\n\n    // //validation on onClick / Create Account button\n    // const handleClick = e => {\n    //     if (validate()) { //if there's validation\n    //         console.log(\"validate was called\")\n    //         setSuccessMessageVisible(true); //do this\n    //     } else {\n    //         return;\n    //     }\n    // }\n\n        //dunno what this does, GOTTA GET BACK HERE\n        // context.users.push({name, email, password, balance:100});\n        // ez kell\n        // context.users.push({name, email, password});\n        // setShow(false);\n    \n\n    \n    // //form input \n    // //can't have same function for all 3 as in the helper code I got (right?)\n    // const handleNameChange = e => {\n    //     // setName(e.currentTarget.value); //if there's no letter validation\n    //     let newName = e.currentTarget.value;\n    //     if (!newName || validateName(newName)) {\n    //         setName(newName);\n    //     }\n    // }\n\n    // const handleEmailChange = e => {\n    //     setEmail(e.currentTarget.value);\n    // }\n\n    // const handlePasswordChange = e => {        \n    //     setPassword(e.currentTarget.value);\n    // }\n\n    // const clearForm = () => {\n    //     setName(\"\");\n    //     setEmail(\"\");\n    //     setPassword(\"\");\n    //     setSuccessMessageVisible(false);\n    // }\n\n    return (\n        <Card\n            bgcolor=\"info\"\n            header=\"Open Account\"\n            body={!successMessageVisible ? (  //if it's not visible, create account\n                <>\n                    <h5 className=\"create mb-4\">Open an account that fits your needs!</h5>\n\n                    <div>\n                        <div className=\"error\">{nameError}</div>\n                        <div className=\"error\">{emailError}</div>\n                        <div className=\"error\">{passwError}</div>\n                    </div>\n                    \n                    <h6 className=\"name mt-4\">Name</h6>\n                    <input type=\"input\" className=\"form-control\" id=\"name\" placeholder=\"Your name is...\" value={name} onChange={handleNameChange}/><br/>\n                    \n                    <h6>Email address</h6>\n                    <input type=\"input\" className=\"form-control\" id=\"email\" placeholder=\"Your email address is...\" value={email} onChange={handleEmailChange}/><br/>\n\n                    <h6>Password</h6>\n                    <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Create a password\" value={password} onChange={handlePasswordChange}/><br/>\n                    \n                    <button type=\"submit\" disabled={!name && !email && !password} className=\"submitBtn btn btn-light\" onClick={e => handleClick()}>Create Account</button>\n                    </>\n                    ):( //if it's visible, hide \"previous page\", show success msg and you can create a new account\n                    <>\n                    <div className=\"accountMsg mb-4\">\n                        <h6>Account succesfully created!</h6>\n                    </div>\n                    <button type=\"submit\" className=\"submitBtn btn btn-light\" onClick={clearForm}>Add another account</button>\n                </>\n            )}\n        />\n    )\n}\n\nexport default CreateAccount;"]},"metadata":{},"sourceType":"module"}