{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/2nd semester/bad_bank_assignment/bad_bank_react/src/CreateAccount.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext, useContext } from \"react\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CreateAccount() {\n  _s();\n\n  const [show, setShow] = useState(true);\n  const [status, setStatus] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const MyContext = /*#__PURE__*/createContext(null); //creates a Context object\n\n  const context = useContext(MyContext); //validation\n\n  const validate = (fieldName, statusText) => {\n    if (!fieldName) {\n      setStatus(\"Error: \" + statusText);\n      setTimeout(() => setStatus(\"\"), 3000); //why is setStatus(\"\") called with an empty string?\n\n      return false; //validation is false\n    }\n\n    return true; //validation is true\n  }; //validation\n  //need to further check this\n\n\n  const handleCreate = () => {\n    console.log(name, email, password); // if (!validate(name, 'Please enter name')) {\n    //     return;\n    // } else if(!validate(email, 'Please enter email address')) {\n    //     return;\n    // } else if(!validate(password, 'Please enter password')) {\n    //     return;\n    // }\n\n    if (!validate(name, 'Please fill missing field')) return;\n    if (!validate(name, 'Please enter name')) return;\n    if (!validate(email, 'Please enter email address')) return;\n    if (!validate(password, 'Please enter password')) return; // context.users.push({name, email, password, balance:100});\n\n    context.users.push({\n      name,\n      email,\n      password\n    });\n    setShow(false);\n  }; //when all 3 pass validate, it crashes\n  //form input \n  //can't have same function for all 3 as in helper code\n\n\n  const handleNameChange = e => {\n    setName(e.currentTarget.value);\n  };\n\n  const handleEmailChange = e => {\n    setEmail(e.currentTarget.value);\n  };\n\n  const handlePasswordChange = e => {\n    setPassword(e.currentTarget.value);\n  };\n\n  const clearForm = () => {\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n    setShow(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bgcolor: \"info\",\n    header: \"Open Account\",\n    status: status,\n    body: show ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"create mb-3\",\n        children: \"Open an account that fits your needs!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"input\",\n        className: \"form-control\",\n        id: \"name\",\n        placeholder: \"Enter name here\",\n        value: name,\n        onChange: handleNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 149\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"input\",\n        className: \"form-control\",\n        id: \"email\",\n        placeholder: \"Enter email here\",\n        value: email,\n        onChange: handleEmailChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 152\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        id: \"password\",\n        placeholder: \"Enter password here\",\n        value: password,\n        onChange: handlePasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 167\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-light\",\n        onClick: handleCreate,\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-light\",\n        onClick: clearForm,\n        children: \"Add another account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateAccount, \"W4nDVP4aC08sR4uZb6qG1gJK2N8=\");\n\n_c = CreateAccount;\nexport default CreateAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"sources":["/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/2nd semester/bad_bank_assignment/bad_bank_react/src/CreateAccount.js"],"names":["React","useState","createContext","useContext","Card","CreateAccount","show","setShow","status","setStatus","name","setName","email","setEmail","password","setPassword","MyContext","context","validate","fieldName","statusText","setTimeout","handleCreate","console","log","users","push","handleNameChange","e","currentTarget","value","handleEmailChange","handlePasswordChange","clearForm"],"mappings":"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","sourcesContent":["import React, {useState, createContext, useContext} from \"react\";\nimport Card from \"./Card\";\n\nfunction CreateAccount() {\n    const [show, setShow] = useState(true);\n    const [status, setStatus] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const MyContext = createContext(null); //creates a Context object\n    const context = useContext(MyContext);  \n  \n    //validation\n    const validate = (fieldName, statusText) => {\n        if (!fieldName) {\n            setStatus(\"Error: \" + statusText);\n            setTimeout(() => setStatus(\"\"), 3000); //why is setStatus(\"\") called with an empty string?\n            return false; //validation is false\n        }\n        return true;  //validation is true\n    }\n\n    //validation\n    //need to further check this\n    const handleCreate = () => {\n        console.log(name, email, password);\n        \n        // if (!validate(name, 'Please enter name')) {\n        //     return;\n        // } else if(!validate(email, 'Please enter email address')) {\n        //     return;\n        // } else if(!validate(password, 'Please enter password')) {\n        //     return;\n        // }\n        if (!validate(name, 'Please fill missing field')) return;\n        if (!validate(name, 'Please enter name')) return;\n        if (!validate(email, 'Please enter email address')) return;\n        if(!validate(password, 'Please enter password')) return;\n        \n        // context.users.push({name, email, password, balance:100});\n        context.users.push({name, email, password});\n        setShow(false);\n    }    \n    //when all 3 pass validate, it crashes\n\n    \n    //form input \n    //can't have same function for all 3 as in helper code\n    const handleNameChange = e => {\n        setName(e.currentTarget.value);\n    }\n\n    const handleEmailChange = e => {\n        setEmail(e.currentTarget.value);\n    }\n\n    const handlePasswordChange = e => {\n        setPassword(e.currentTarget.value);\n    }\n\n\n    const clearForm = () => {\n        setName(\"\")\n        setEmail(\"\")\n        setPassword(\"\")\n        setShow(true);\n    }\n\n    return (\n        <Card\n            bgcolor=\"info\"\n            header=\"Open Account\"\n            status={status}\n            body={show ? (  \n                <>\n                    <h5 className=\"create mb-3\">Open an account that fits your needs!</h5>\n                    <h6>Name</h6>\n                    <input type=\"input\" className=\"form-control\" id=\"name\" placeholder=\"Enter name here\" value={name} onChange={handleNameChange} /><br/>\n                    <h6>Email address</h6>\n                    <input type=\"input\" className=\"form-control\" id=\"email\" placeholder=\"Enter email here\" value={email} onChange={handleEmailChange}/><br/>\n                    <h6>Password</h6>\n                    <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Enter password here\" value={password} onChange={handlePasswordChange}/><br/>\n                    <button type=\"submit\" className=\"btn btn-light\" onClick={handleCreate}>Create Account</button>\n                    </>\n                    ):(\n                    <>\n                    <h6>Success</h6>\n                    <button type=\"submit\" className=\"btn btn-light\" onClick={clearForm}>Add another account</button>\n                </>\n            )}\n        />\n    )\n}\n\nexport default CreateAccount;"]},"metadata":{},"sourceType":"module"}