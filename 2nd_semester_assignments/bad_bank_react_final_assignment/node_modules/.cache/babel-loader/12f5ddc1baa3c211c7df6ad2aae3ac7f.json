{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/2nd semester/bad_bank_assignment/bad_bank_react/src/Deposit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"./Card\";\nimport CreateAccount from \"./CreateAccount\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Deposit() {\n  _s();\n\n  let [depositNr, setDepositNr] = useState(\"\");\n  let [numberError, setNumberError] = useState(\"\"); //error string\n\n  let numberErrorStr = \"\"; //input limited to numbers\n\n  const validate = newValue => {\n    setNumberError(\"\");\n\n    if (!newValue.match(/^^([(0-9)]+\\.)*([(0-9)]+)+$/)) {\n      numberErrorStr = \"Enter only numbers\";\n      setNumberError(numberErrorStr);\n      return false; //didn't validate\n    }\n\n    return true; //did validate\n  };\n\n  const handleChange = e => {\n    let newValue = e.target.value;\n\n    if (validate(newValue) || !newValue) {\n      //otherwise when we delete the numbers, it won't allow us to delete the last one\n      setDepositNr(newValue);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bgcolor: \"info\",\n    header: \"Deposit\" // status={CreateAccount.status}\n    ,\n    body: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"deposit mb-4\",\n        children: \"Skip extra trips to the bank and deposit your money online!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: numberError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"deposit mb-4\",\n        children: \"Your current balance: $\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"The amount you wish to deposit:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"input\",\n        className: \"form-control\",\n        id: \"depositNr\",\n        placeholder: \"Amount\",\n        value: depositNr,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-light\",\n        onClick: CreateAccount.email,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Deposit, \"Q48IGHhzCwqq/dDOiuFYfUzrzAs=\");\n\n_c = Deposit;\nexport default Deposit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deposit\");","map":{"version":3,"sources":["/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/2nd semester/bad_bank_assignment/bad_bank_react/src/Deposit.js"],"names":["React","useState","Card","CreateAccount","Deposit","depositNr","setDepositNr","numberError","setNumberError","numberErrorStr","validate","newValue","match","handleChange","e","target","value","email"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;;AAGA,SAASC,OAAT,GAAmB;AAAA;;AACjB,MAAI,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAAxC;AACA,MAAI,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA5C,CAFiB,CAIjB;;AACA,MAAIQ,cAAc,GAAG,EAArB,CALiB,CAMjB;;AACA,QAAMC,QAAQ,GAAIC,QAAD,IAAc;AAC7BH,IAAAA,cAAc,CAAC,EAAD,CAAd;;AAEA,QAAG,CAACG,QAAQ,CAACC,KAAT,CAAe,6BAAf,CAAJ,EAAmD;AACjDH,MAAAA,cAAc,GAAG,oBAAjB;AACAD,MAAAA,cAAc,CAACC,cAAD,CAAd;AACA,aAAO,KAAP,CAHiD,CAGnC;AACf;;AACD,WAAO,IAAP,CAR6B,CAQhB;AACd,GATD;;AAWA,QAAMI,YAAY,GAAGC,CAAC,IAAI;AACxB,QAAIH,QAAQ,GAAGG,CAAC,CAACC,MAAF,CAASC,KAAxB;;AACA,QAAIN,QAAQ,CAACC,QAAD,CAAR,IAAsB,CAACA,QAA3B,EAAqC;AAAE;AACrCL,MAAAA,YAAY,CAACK,QAAD,CAAZ;AACD;AACF,GALD;;AAQA,sBACE,QAAC,IAAD;AACI,IAAA,OAAO,EAAC,MADZ;AAEI,IAAA,MAAM,EAAC,SAFX,CAGI;AAHJ;AAII,IAAA,IAAI,eACF;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,oBAAwBJ;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAUE;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAC,cAA9B;AAA6C,QAAA,EAAE,EAAC,WAAhD;AAA4D,QAAA,WAAW,EAAC,QAAxE;AAAiF,QAAA,KAAK,EAAEF,SAAxF;AAAmG,QAAA,QAAQ,EAAEQ;AAA7G;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,eAAhC;AAAgD,QAAA,OAAO,EAAEV,aAAa,CAACc,KAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AALN;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAjDQb,O;;KAAAA,O;AAmDT,eAAeA,OAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport Card from \"./Card\";\r\nimport CreateAccount from \"./CreateAccount\";\r\n\r\n\r\nfunction Deposit() {\r\n  let [depositNr, setDepositNr] = useState(\"\");\r\n  let [numberError, setNumberError] = useState(\"\");\r\n\r\n  //error string\r\n  let numberErrorStr = \"\";\r\n  //input limited to numbers\r\n  const validate = (newValue) => {\r\n    setNumberError(\"\");\r\n\r\n    if(!newValue.match(/^^([(0-9)]+\\.)*([(0-9)]+)+$/)) {\r\n      numberErrorStr = \"Enter only numbers\";\r\n      setNumberError(numberErrorStr);\r\n      return false; //didn't validate\r\n    }\r\n    return true; //did validate\r\n  }\r\n\r\n  const handleChange = e => {\r\n    let newValue = e.target.value;\r\n    if (validate(newValue) || !newValue) { //otherwise when we delete the numbers, it won't allow us to delete the last one\r\n      setDepositNr(newValue);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Card\r\n        bgcolor=\"info\"\r\n        header=\"Deposit\"\r\n        // status={CreateAccount.status}\r\n        body={\r\n          <>  \r\n            <h5 className=\"deposit mb-4\">Skip extra trips to the bank and deposit your money online!</h5>\r\n            <div>\r\n              <div className=\"error\">{numberError}</div>\r\n            </div>\r\n\r\n            <h6 className=\"deposit mb-4\">Your current balance: ${}</h6>\r\n\r\n            <h6>The amount you wish to deposit:</h6>\r\n\r\n            <input type=\"input\" className=\"form-control\" id=\"depositNr\" placeholder=\"Amount\" value={depositNr} onChange={handleChange}/>\r\n            <br/>\r\n            <button type=\"submit\" className=\"btn btn-light\" onClick={CreateAccount.email}>Submit</button>\r\n          </>\r\n        }\r\n    />\r\n  )\r\n}\r\n\r\nexport default Deposit;\r\n"]},"metadata":{},"sourceType":"module"}