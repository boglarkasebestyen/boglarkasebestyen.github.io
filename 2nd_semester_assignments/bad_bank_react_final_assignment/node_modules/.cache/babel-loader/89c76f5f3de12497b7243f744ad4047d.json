{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/2nd semester/bad_bank_assignment/bad_bank_react/src/Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport ReactTooltip from 'react-tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction NavBar() {\n  _s();\n\n  /* Highlighting: The navigation bar highlights the element of the current page the user is on. */\n\n  /* Highlight the current page the user is on / active page, even on refresh (that was a bug) */\n  const location = useLocation();\n  const pages = [{\n    id: \"home\",\n    text: \"Welcome to Bad Bank\",\n    tooltipText: \"Home Page\",\n    href: \"#/\"\n  }, {\n    id: \"createAccount\",\n    text: \"Open Acount\",\n    tooltipText: \"Open your Bad Bank速 account\",\n    href: \"#/CreateAccount/\"\n  }, {\n    id: \"login\",\n    text: \"Login\",\n    tooltipText: \"Log in to your Bad Bank速 profile\",\n    href: \"#/login/\"\n  }, {\n    id: \"deposit\",\n    text: \"Deposit\",\n    tooltipText: \"Deposit cash & checks on any device\",\n    href: \"#/deposit/\"\n  }, {\n    id: \"withdraw\",\n    text: \"Withdraw\",\n    tooltipText: \"Withdraw cash & checks on any device\",\n    href: \"#/withdraw/\"\n  }, {\n    id: \"allData\",\n    text: \"All Data\",\n    tooltipText: \"No idea what comes here\",\n    href: \"#/alldata/\"\n  }];\n\n  const getClass = classIndex => {\n    const currentPage = location.pathname; //the location is an object, we need the pathname from it\n\n    const renderedPage = indexOf(pages).href.split(\"#\").pop(); //from which we'll get \"login\", \"deposit\", etc.\n\n    return renderedPage == currentPage ? \"current\" : \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-expand-lg navbar-dark bg-dark\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navbar-toggler\",\n        type: \"button\",\n        \"data-toggle\": \"collapse\",\n        \"data-target\": \"#navbarNav\",\n        \"aria-controls\": \"navbarNav\",\n        \"aria-expanded\": \"false\",\n        \"aria-label\": \"Toggle navigation\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"navbar-toggler-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"collapse navbar-collapse nav-container\",\n        id: \"navbarNav\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"navbar-nav navitem-container\",\n          children: pages.map((item, index) =>\n          /*#__PURE__*/\n          //the index from getClass(index) is the index from map()\n          _jsxDEV(\"li\", {\n            className: \"nav-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              \"data-tip\": true,\n              \"data-for\": item.id,\n              className: `nav-link pl-2 pr-2 m-1 ${getClass(index)}`,\n              href: item.href,\n              children: item.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n              id: item.id,\n              effect: \"solid\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: item.tooltipText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(NavBar, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/2nd semester/bad_bank_assignment/bad_bank_react/src/Navbar.js"],"names":["React","useState","useLocation","ReactTooltip","NavBar","location","pages","id","text","tooltipText","href","getClass","classIndex","currentPage","pathname","renderedPage","indexOf","split","pop","map","item","index"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nfunction NavBar() {\r\n  /* Highlighting: The navigation bar highlights the element of the current page the user is on. */\r\n  /* Highlight the current page the user is on / active page, even on refresh (that was a bug) */\r\n  const location = useLocation();\r\n  const pages = [{id:\"home\", text: \"Welcome to Bad Bank\", tooltipText: \"Home Page\", href:\"#/\"},\r\n              {id:\"createAccount\", text: \"Open Acount\", tooltipText: \"Open your Bad Bank速 account\", href:\"#/CreateAccount/\"},\r\n              {id:\"login\", text: \"Login\", tooltipText: \"Log in to your Bad Bank速 profile\", href:\"#/login/\"},            \r\n              {id:\"deposit\",text: \"Deposit\", tooltipText: \"Deposit cash & checks on any device\", href:\"#/deposit/\"},\r\n              {id:\"withdraw\",text: \"Withdraw\", tooltipText: \"Withdraw cash & checks on any device\", href:\"#/withdraw/\"},\r\n              {id:\"allData\",text: \"All Data\", tooltipText: \"No idea what comes here\", href:\"#/alldata/\"},\r\n  ];\r\n\r\n  const getClass = (classIndex) => {\r\n    const currentPage = location.pathname; //the location is an object, we need the pathname from it\r\n    const renderedPage = indexOf(pages).href.split(\"#\").pop(); //from which we'll get \"login\", \"deposit\", etc.\r\n    return renderedPage == currentPage ? \"current\" : \"\";\r\n  }\r\n\r\n  return (\r\n    <>    \r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      {/* <a className=\"navbar-brand\" href=\"#\">Welcome to Bad Bank</a> */}\r\n\r\n      {/* BUTTON */}\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        {/* hamburger icon */}\r\n        <span className=\"navbar-toggler-icon\"></span> \r\n      </button>\r\n\r\n      {/*  main container: containing nav items from item 1 till length of page */}\r\n      <div className=\"collapse navbar-collapse nav-container\" id=\"navbarNav\">\r\n\r\n        {/* container containing nav items only */}\r\n        <ul className=\"navbar-nav navitem-container\">\r\n\r\n          {/* nav items: */}\r\n          {/* Highlighting: The navigation bar highlights the element of the current page the user is on. */}\r\n          {/* Tooltip implementation:\r\n          When a user hovers their cursor over a navigation bar element, they see a few words describing that page. */}\r\n          \r\n          {pages.map((item, index) => //the index from getClass(index) is the index from map()\r\n            <li key={index} className=\"nav-item\">\r\n              <a data-tip data-for={item.id} className={`nav-link pl-2 pr-2 m-1 ${getClass(index)}`} href={item.href} >{item.text}</a>\r\n              <ReactTooltip id={item.id} effect='solid'>\r\n                <span>{item.tooltipText}</span>\r\n              </ReactTooltip>\r\n              {/* data-for={item.id} and ReactTooltip id={item.id} need to be the same */}\r\n            </li>\r\n          )}\r\n        </ul>\r\n        {/* end of container for nav items */}\r\n      </div>\r\n      {/* end of main container */}\r\n    </nav>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default NavBar;\r\n\r\n"]},"metadata":{},"sourceType":"module"}