{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/2nd semester/bad_bank_assignment/bad_bank_react/src/Deposit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { MyContext } from \"./MyContext\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Deposit() {\n  _s();\n\n  // let [depositAmount, setDepositAmount] = useState(0.0);\n  // let [balance, setBalance] = useState(0.0);\n  // let [numberError, setNumberError] = useState(\"\");\n  // let [successMessageVisible, setSuccessMessageVisible] = useState(false);\n  // //error string\n  // let numberErrorStr = \"\";\n  // //input limited to numbers\n  // const validateDep = newValue => {\n  //   setNumberError(\"\");\n  //   if(!newValue.match(/^([(0-9)]+\\.)*([(0-9)]+)*$/)) { //this regex matches numbers from 0 to 9 and + decimal numbers\n  //     numberErrorStr = \"Enter numbers only\";\n  //     setNumberError(numberErrorStr);\n  //     return false; //didn't validate\n  //   }\n  //   return true; //did validate\n  // }\n  // const handleChange = e => {\n  //   let newValue = e.target.value;\n  //   if (validateDep(newValue) || !newValue) { //otherwise when we delete the numbers, it won't allow us to delete the last one\n  //     setDepositAmount(newValue);\n  //   } else {\n  //     e.target.value = newValue.slice(0, -1); //when we delete the numbers, it cuts off the last element if that's not a number...right?\n  //   } \n  //   setSuccessMessageVisible(false);   \n  // }\n  // //this also an event hadler; I could have wrapped this in a function that gets an event as argument\n  // const submitDeposit = currentValue => {\n  //   balance += parseFloat(currentValue);\n  //   setBalance(balance);\n  //   setSuccessMessageVisible(true);\n  // }\n  // let showHideSuccessMessage = () => {\n  //   if (successMessageVisible) {\n  //     return (\n  //       <div className=\"depositMsg mt-4\">\n  //         <h6>Your deposit was received!</h6>\n  //       </div>\n  //     )\n  //   }\n  //   return;\n  // }\n  const {\n    //state:\n    name,\n    email,\n    password,\n    nameError,\n    emailError,\n    passwError,\n    depositAmount,\n    balance,\n    numberError,\n    successMessageVisible,\n    //functions:\n    validate,\n    handleClick,\n    handleNameChange,\n    handleEmailChange,\n    handlePasswordChange,\n    clearForm,\n    validateDep,\n    handleChange,\n    submitDeposit,\n    showHideSuccessMessage\n  } = useContext(MyContext);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bgcolor: \"info\",\n    header: \"Deposit\",\n    body: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"deposit mb-4\",\n        children: \"Skip extra trips to the bank and deposit your money online!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"deposit mb-4\",\n        children: [\"Your current balance is: $\", balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"The amount you wish to deposit:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"input\",\n        className: \"form-control\",\n        id: \"depositAmount\",\n        placeholder: \"Amount\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error mb-3\",\n          children: numberError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !depositAmount,\n        className: \"submitBtn btn btn-light\",\n        onClick: () => submitDeposit(depositAmount),\n        children: \"Deposit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }, this), showHideSuccessMessage()]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Deposit, \"OqE0x3S7UY57mbSVZhO4NmkSrpg=\");\n\n_c = Deposit;\nexport default Deposit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deposit\");","map":{"version":3,"sources":["/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/2nd semester/bad_bank_assignment/bad_bank_react/src/Deposit.js"],"names":["React","useContext","MyContext","Card","Deposit","name","email","password","nameError","emailError","passwError","depositAmount","balance","numberError","successMessageVisible","validate","handleClick","handleNameChange","handleEmailChange","handlePasswordChange","clearForm","validateDep","handleChange","submitDeposit","showHideSuccessMessage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAM;AACJ;AACAC,IAAAA,IAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,SALI;AAMJC,IAAAA,UANI;AAOJC,IAAAA,UAPI;AAQJC,IAAAA,aARI;AASJC,IAAAA,OATI;AAUJC,IAAAA,WAVI;AAWJC,IAAAA,qBAXI;AAYJ;AACAC,IAAAA,QAbI;AAcJC,IAAAA,WAdI;AAeJC,IAAAA,gBAfI;AAgBJC,IAAAA,iBAhBI;AAiBJC,IAAAA,oBAjBI;AAkBJC,IAAAA,SAlBI;AAmBJC,IAAAA,WAnBI;AAoBJC,IAAAA,YApBI;AAqBJC,IAAAA,aArBI;AAsBJC,IAAAA;AAtBI,MAuBFvB,UAAU,CAACC,SAAD,CAvBd;AAyBA,sBACE,QAAC,IAAD;AACI,IAAA,OAAO,EAAC,MADZ;AAEI,IAAA,MAAM,EAAC,SAFX;AAGI,IAAA,IAAI,eACF;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,iDAAwDU,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAC,cAA9B;AAA6C,QAAA,EAAE,EAAC,eAAhD;AAAgE,QAAA,WAAW,EAAC,QAA5E;AAAqF,QAAA,QAAQ,EAAEU;AAA/F;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,oBAA6BT;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANJ,eASI;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,QAAQ,EAAE,CAACF,aAAjC;AAAgD,QAAA,SAAS,EAAC,yBAA1D;AAAoF,QAAA,OAAO,EAAE,MAAMY,aAAa,CAACZ,aAAD,CAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,EAWKa,sBAAsB,EAX3B;AAAA;AAJN;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GA9FQpB,O;;KAAAA,O;AAgGT,eAAeA,OAAf","sourcesContent":["import React, {useContext} from \"react\";\r\nimport { MyContext } from \"./MyContext\";\r\nimport Card from \"./Card\";\r\n\r\nfunction Deposit() {\r\n  // let [depositAmount, setDepositAmount] = useState(0.0);\r\n  // let [balance, setBalance] = useState(0.0);\r\n  // let [numberError, setNumberError] = useState(\"\");\r\n  // let [successMessageVisible, setSuccessMessageVisible] = useState(false);\r\n\r\n  // //error string\r\n  // let numberErrorStr = \"\";\r\n  // //input limited to numbers\r\n  // const validateDep = newValue => {\r\n  //   setNumberError(\"\");\r\n  //   if(!newValue.match(/^([(0-9)]+\\.)*([(0-9)]+)*$/)) { //this regex matches numbers from 0 to 9 and + decimal numbers\r\n  //     numberErrorStr = \"Enter numbers only\";\r\n  //     setNumberError(numberErrorStr);\r\n  //     return false; //didn't validate\r\n  //   }\r\n  //   return true; //did validate\r\n  // }\r\n\r\n  // const handleChange = e => {\r\n  //   let newValue = e.target.value;\r\n  //   if (validateDep(newValue) || !newValue) { //otherwise when we delete the numbers, it won't allow us to delete the last one\r\n  //     setDepositAmount(newValue);\r\n  //   } else {\r\n  //     e.target.value = newValue.slice(0, -1); //when we delete the numbers, it cuts off the last element if that's not a number...right?\r\n  //   } \r\n  //   setSuccessMessageVisible(false);   \r\n  // }\r\n\r\n  // //this also an event hadler; I could have wrapped this in a function that gets an event as argument\r\n  // const submitDeposit = currentValue => {\r\n  //   balance += parseFloat(currentValue);\r\n  //   setBalance(balance);\r\n  //   setSuccessMessageVisible(true);\r\n  // }\r\n\r\n  // let showHideSuccessMessage = () => {\r\n  //   if (successMessageVisible) {\r\n  //     return (\r\n  //       <div className=\"depositMsg mt-4\">\r\n  //         <h6>Your deposit was received!</h6>\r\n  //       </div>\r\n  //     )\r\n  //   }\r\n  //   return;\r\n  // }\r\n\r\n  const {\r\n    //state:\r\n    name,\r\n    email,\r\n    password,\r\n    nameError,\r\n    emailError,\r\n    passwError,\r\n    depositAmount,\r\n    balance,\r\n    numberError,\r\n    successMessageVisible,\r\n    //functions:\r\n    validate,\r\n    handleClick,\r\n    handleNameChange,\r\n    handleEmailChange,\r\n    handlePasswordChange,\r\n    clearForm,\r\n    validateDep,\r\n    handleChange,\r\n    submitDeposit,\r\n    showHideSuccessMessage\r\n  } = useContext(MyContext);\r\n\r\n  return (\r\n    <Card\r\n        bgcolor=\"info\"\r\n        header=\"Deposit\"\r\n        body= { (\r\n          <>  \r\n              <h5 className=\"deposit mb-4\">Skip extra trips to the bank and deposit your money online!</h5>\r\n              <h6 className=\"deposit mb-4\">Your current balance is: ${balance}</h6>\r\n              <h6>The amount you wish to deposit:</h6>\r\n              <input type=\"input\" className=\"form-control\" id=\"depositAmount\" placeholder=\"Amount\" onChange={handleChange}/>\r\n              <br/>\r\n              <div>\r\n                <div className=\"error mb-3\">{numberError}</div>\r\n              </div>\r\n              <br/>\r\n              <button type=\"submit\" disabled={!depositAmount} className=\"submitBtn btn btn-light\" onClick={() => submitDeposit(depositAmount)}>Deposit</button>            \r\n              {showHideSuccessMessage()}\r\n          </>\r\n           )\r\n        }  \r\n    />\r\n  )\r\n}\r\n\r\nexport default Deposit;\r\n"]},"metadata":{},"sourceType":"module"}