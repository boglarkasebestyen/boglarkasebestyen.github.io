{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/2nd semester/bad_bank_assignment/bad_bank_react/src/CreateAccount.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext, useContext } from \"react\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CreateAccount() {\n  _s();\n\n  const [successMessageVisible, setSuccessMessageVisible] = useState(false); //instead of \"show\" initialized with true...\n  // const [status, setStatus] = useState(\"\");\n\n  let [name, setName] = useState(\"\");\n  let [email, setEmail] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  let [nameError, setNameError] = useState(\"\");\n  let [emailError, setEmailError] = useState(\"\");\n  let [passwError, setPasswError] = useState(\"\");\n  const MyContext = /*#__PURE__*/createContext(null); //creates a Context object\n\n  const context = useContext(MyContext);\n  let nameErrorStr = \"\";\n  let emailErrorStr = \"\";\n  let passwordErrorStr = \"\"; //NO INPUT + ADDITIONAL VALIDATION\n\n  const validate = () => {\n    setEmailError(\"\");\n    setNameError(\"\");\n    setPasswError(\"\");\n\n    if (!email) {\n      emailErrorStr = \"Oops! Your email can't be blank.\"; //additional: email length \n    } else if (email.length == 1) {\n      emailErrorStr = \"Email must be longer than that.\";\n    }\n\n    if (!name) {\n      nameErrorStr = \"Oops! Your name can't be blank.\"; //additional: name length \n    } else if (name.length < 3) {\n      nameErrorStr = \"Name must be longer than that.\";\n    }\n\n    if (!password) {\n      passwordErrorStr = \"Oops! Your password can't be blank.\";\n    }\n\n    if (nameErrorStr == \"\") {\n      validateName(name);\n    }\n\n    if (emailErrorStr == \"\") {\n      validateEmail(email);\n    }\n\n    if (passwordErrorStr == \"\") {\n      validatePassword(password);\n    }\n\n    setNameError(nameErrorStr);\n    setEmailError(emailErrorStr);\n    setPasswError(passwordErrorStr);\n    return nameErrorStr === \"\" && emailErrorStr === \"\" && passwordErrorStr === \"\"; //returns true and validate() is executed\n  };\n\n  const validateName = newName => {\n    //limiting input to the letters of the English alphabet\n    if (!newName.match(/^[a-z][a-z\\s]*$/)) {\n      nameErrorStr = \"Enter only letters\";\n      return false;\n    }\n\n    return true;\n  };\n\n  const validateEmail = newEmail => {\n    let emailFormat = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,4}$/; //email format function\n\n    let isValidFormat = str => {\n      return str.match(emailFormat);\n    };\n\n    if (!isValidFormat(newEmail)) {\n      emailErrorStr = \"Oops! Invalid email.\";\n      return false;\n    }\n\n    return true;\n  };\n\n  const validatePassword = newPassword => {\n    if (newPassword.length == 1 || newPassword.length < 8) {\n      passwordErrorStr = \"Password must be longer than that.\";\n      return false;\n    }\n\n    return true;\n  }; //validation on onClick / Create Account button\n\n\n  const handleClick = e => {\n    if (validate()) {\n      //if there's validation\n      console.log(\"validate was called\");\n      setSuccessMessageVisible(true); //do this\n    } else {\n      return;\n    }\n  }; //dunno what this does, GOTTA GET BACK HERE\n  // context.users.push({name, email, password, balance:100});\n  // ez kell\n  // context.users.push({name, email, password});\n  // setShow(false);\n  //form input \n  //can't have same function for all 3 as in the helper code I got (right?)\n\n\n  const handleNameChange = e => {\n    // setName(e.currentTarget.value); //if there's no letter validation\n    let newName = e.currentTarget.value;\n\n    if (!newName || validateName(newName)) {\n      setName(newName);\n    }\n  };\n\n  const handleEmailChange = e => {\n    setEmail(e.currentTarget.value);\n  };\n\n  const handlePasswordChange = e => {\n    setPassword(e.currentTarget.value);\n  };\n\n  const clearForm = () => {\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n    setSuccessMessageVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bgcolor: \"info\",\n    header: \"Open Account\" // status={status}\n    ,\n    body: !successMessageVisible ?\n    /*#__PURE__*/\n    //if it's not visible, create account\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"create mb-4\",\n        children: \"Open an account that fits your needs!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: nameError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: emailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: passwError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"name mt-4\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"input\",\n        className: \"form-control\",\n        id: \"name\",\n        placeholder: \"Your name is...\",\n        value: name,\n        onChange: handleNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 148\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"input\",\n        className: \"form-control\",\n        id: \"email\",\n        placeholder: \"Your email address is...\",\n        value: email,\n        onChange: handleEmailChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 160\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        id: \"password\",\n        placeholder: \"Create a password\",\n        value: password,\n        onChange: handlePasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 165\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !name && !email && !password,\n        className: \"submitBtn btn btn-light\",\n        onClick: e => handleClick(),\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) :\n    /*#__PURE__*/\n    //if it's visible, hide \"previous page\", show success msg and you can create a new account\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accountMsg mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Account succesfully created!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submitBtn btn btn-light\",\n        onClick: clearForm,\n        children: \"Add another account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateAccount, \"Lf3SniJ/QA53ABS07deV9ypAx6g=\");\n\n_c = CreateAccount;\nexport default CreateAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"sources":["/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/2nd semester/bad_bank_assignment/bad_bank_react/src/CreateAccount.js"],"names":["React","useState","createContext","useContext","Card","CreateAccount","successMessageVisible","setSuccessMessageVisible","name","setName","email","setEmail","password","setPassword","nameError","setNameError","emailError","setEmailError","passwError","setPasswError","MyContext","context","nameErrorStr","emailErrorStr","passwordErrorStr","validate","length","validateName","validateEmail","validatePassword","newName","match","newEmail","emailFormat","isValidFormat","str","newPassword","handleClick","e","console","log","handleNameChange","currentTarget","value","handleEmailChange","handlePasswordChange","clearForm"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,aAAzB,EAAwCC,UAAxC,QAAyD,OAAzD;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AACrB,QAAM,CAACC,qBAAD,EAAwBC,wBAAxB,IAAoDN,QAAQ,CAAC,KAAD,CAAlE,CADqB,CACsD;AAC3E;;AACA,MAAI,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAA9B;AACA,MAAI,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAI,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAtC;AACA,MAAI,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,MAAI,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA1C;AACA,MAAI,CAACiB,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,EAAD,CAA1C;AAGA,QAAMmB,SAAS,gBAAGlB,aAAa,CAAC,IAAD,CAA/B,CAXqB,CAWkB;;AACvC,QAAMmB,OAAO,GAAGlB,UAAU,CAACiB,SAAD,CAA1B;AAEA,MAAIE,YAAY,GAAG,EAAnB;AACA,MAAIC,aAAa,GAAG,EAApB;AACA,MAAIC,gBAAgB,GAAG,EAAvB,CAhBqB,CAkBrB;;AACA,QAAMC,QAAQ,GAAG,MAAM;AACnBR,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAF,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAI,IAAAA,aAAa,CAAC,EAAD,CAAb;;AAEA,QAAI,CAACT,KAAL,EAAY;AACRa,MAAAA,aAAa,GAAG,kCAAhB,CADQ,CAER;AACH,KAHD,MAGO,IAAIb,KAAK,CAACgB,MAAN,IAAgB,CAApB,EAAuB;AAC1BH,MAAAA,aAAa,GAAG,iCAAhB;AACH;;AACD,QAAI,CAACf,IAAL,EAAW;AACPc,MAAAA,YAAY,GAAG,iCAAf,CADO,CAEP;AACH,KAHD,MAGQ,IAAId,IAAI,CAACkB,MAAL,GAAc,CAAlB,EAAqB;AACzBJ,MAAAA,YAAY,GAAG,gCAAf;AACH;;AAED,QAAI,CAACV,QAAL,EAAe;AACXY,MAAAA,gBAAgB,GAAG,qCAAnB;AACH;;AAED,QAAIF,YAAY,IAAI,EAApB,EAAwB;AACpBK,MAAAA,YAAY,CAACnB,IAAD,CAAZ;AACH;;AAED,QAAIe,aAAa,IAAI,EAArB,EAAyB;AACrBK,MAAAA,aAAa,CAAClB,KAAD,CAAb;AACH;;AAED,QAAIc,gBAAgB,IAAI,EAAxB,EAA4B;AACxBK,MAAAA,gBAAgB,CAACjB,QAAD,CAAhB;AACH;;AAEDG,IAAAA,YAAY,CAACO,YAAD,CAAZ;AACAL,IAAAA,aAAa,CAACM,aAAD,CAAb;AACAJ,IAAAA,aAAa,CAACK,gBAAD,CAAb;AACA,WAAOF,YAAY,KAAK,EAAjB,IAAuBC,aAAa,KAAK,EAAzC,IAA+CC,gBAAgB,KAAK,EAA3E,CArCmB,CAqC4D;AAClF,GAtCD;;AAwCA,QAAMG,YAAY,GAAGG,OAAO,IAAI;AAC5B;AACA,QAAG,CAACA,OAAO,CAACC,KAAR,CAAc,iBAAd,CAAJ,EAAsC;AAClCT,MAAAA,YAAY,GAAG,oBAAf;AACA,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH,GAPD;;AASA,QAAMM,aAAa,GAAGI,QAAQ,IAAI;AAC9B,QAAIC,WAAW,GAAG,kCAAlB,CAD8B,CAE9B;;AACA,QAAIC,aAAa,GAAGC,GAAG,IAAI;AACvB,aAAOA,GAAG,CAACJ,KAAJ,CAAUE,WAAV,CAAP;AACH,KAFD;;AAIA,QAAI,CAACC,aAAa,CAACF,QAAD,CAAlB,EAA8B;AAC1BT,MAAAA,aAAa,GAAG,sBAAhB;AACA,aAAO,KAAP;AACH;;AAED,WAAO,IAAP;AACH,GAbD;;AAeA,QAAMM,gBAAgB,GAAGO,WAAW,IAAI;AACpC,QAAIA,WAAW,CAACV,MAAZ,IAAsB,CAAtB,IAA2BU,WAAW,CAACV,MAAZ,GAAqB,CAApD,EAAuD;AACnDF,MAAAA,gBAAgB,GAAG,oCAAnB;AACA,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH,GAND,CAnFqB,CA2FrB;;;AACA,QAAMa,WAAW,GAAGC,CAAC,IAAI;AACrB,QAAIb,QAAQ,EAAZ,EAAgB;AAAE;AACdc,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAjC,MAAAA,wBAAwB,CAAC,IAAD,CAAxB,CAFY,CAEoB;AACnC,KAHD,MAGO;AACH;AACH;AACJ,GAPD,CA5FqB,CAqGjB;AACA;AACA;AACA;AACA;AAIJ;AACA;;;AACA,QAAMkC,gBAAgB,GAAGH,CAAC,IAAI;AAC1B;AACA,QAAIR,OAAO,GAAGQ,CAAC,CAACI,aAAF,CAAgBC,KAA9B;;AACA,QAAI,CAACb,OAAD,IAAYH,YAAY,CAACG,OAAD,CAA5B,EAAuC;AACnCrB,MAAAA,OAAO,CAACqB,OAAD,CAAP;AACH;AACJ,GAND;;AAQA,QAAMc,iBAAiB,GAAGN,CAAC,IAAI;AAC3B3B,IAAAA,QAAQ,CAAC2B,CAAC,CAACI,aAAF,CAAgBC,KAAjB,CAAR;AACH,GAFD;;AAIA,QAAME,oBAAoB,GAAGP,CAAC,IAAI;AAC9BzB,IAAAA,WAAW,CAACyB,CAAC,CAACI,aAAF,CAAgBC,KAAjB,CAAX;AACH,GAFD;;AAIA,QAAMG,SAAS,GAAG,MAAM;AACpBrC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAN,IAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACH,GALD;;AAOA,sBACI,QAAC,IAAD;AACI,IAAA,OAAO,EAAC,MADZ;AAEI,IAAA,MAAM,EAAC,cAFX,CAGI;AAHJ;AAII,IAAA,IAAI,EAAE,CAACD,qBAAD;AAAA;AAA4B;AAC9B;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,oBAAwBQ;AAAxB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,oBAAwBE;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,oBAAwBE;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eASI;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAC,cAA9B;AAA6C,QAAA,EAAE,EAAC,MAAhD;AAAuD,QAAA,WAAW,EAAC,iBAAnE;AAAqF,QAAA,KAAK,EAAEV,IAA5F;AAAkG,QAAA,QAAQ,EAAEiC;AAA5G;AAAA;AAAA;AAAA;AAAA,cAVJ,eAUmI;AAAA;AAAA;AAAA;AAAA,cAVnI,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,eAaI;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAC,cAA9B;AAA6C,QAAA,EAAE,EAAC,OAAhD;AAAwD,QAAA,WAAW,EAAC,0BAApE;AAA+F,QAAA,KAAK,EAAE/B,KAAtG;AAA6G,QAAA,QAAQ,EAAEkC;AAAvH;AAAA;AAAA;AAAA;AAAA,cAbJ,eAa+I;AAAA;AAAA;AAAA;AAAA,cAb/I,eAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ,eAgBI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,SAAS,EAAC,cAAjC;AAAgD,QAAA,EAAE,EAAC,UAAnD;AAA8D,QAAA,WAAW,EAAC,mBAA1E;AAA8F,QAAA,KAAK,EAAEhC,QAArG;AAA+G,QAAA,QAAQ,EAAEiC;AAAzH;AAAA;AAAA;AAAA;AAAA,cAhBJ,eAgBoJ;AAAA;AAAA;AAAA;AAAA,cAhBpJ,eAmBI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,QAAQ,EAAE,CAACrC,IAAD,IAAS,CAACE,KAAV,IAAmB,CAACE,QAApD;AAA8D,QAAA,SAAS,EAAC,yBAAxE;AAAkG,QAAA,OAAO,EAAE0B,CAAC,IAAID,WAAW,EAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA,oBADE;AAAA;AAsBM;AACJ;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADA,eAIA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,yBAAhC;AAA0D,QAAA,OAAO,EAAES,SAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AA3BZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqCH;;GA3KQzC,a;;KAAAA,a;AA6KT,eAAeA,aAAf","sourcesContent":["import React, {useState, createContext, useContext} from \"react\";\nimport Card from \"./Card\";\n\nfunction CreateAccount() {\n    const [successMessageVisible, setSuccessMessageVisible] = useState(false); //instead of \"show\" initialized with true...\n    // const [status, setStatus] = useState(\"\");\n    let [name, setName] = useState(\"\");\n    let [email, setEmail] = useState(\"\");\n    let [password, setPassword] = useState(\"\");\n    let [nameError, setNameError] = useState(\"\");\n    let [emailError, setEmailError] = useState(\"\");\n    let [passwError, setPasswError] = useState(\"\");\n\n\n    const MyContext = createContext(null); //creates a Context object\n    const context = useContext(MyContext);  \n\n    let nameErrorStr = \"\";\n    let emailErrorStr = \"\";\n    let passwordErrorStr = \"\";\n\n    //NO INPUT + ADDITIONAL VALIDATION\n    const validate = () => {\n        setEmailError(\"\");\n        setNameError(\"\");\n        setPasswError(\"\")\n\n        if (!email) {\n            emailErrorStr = \"Oops! Your email can't be blank.\";\n            //additional: email length \n        } else if (email.length == 1) {\n            emailErrorStr = \"Email must be longer than that.\";\n        }\n        if (!name) {\n            nameErrorStr = \"Oops! Your name can't be blank.\";\n            //additional: name length \n        } else  if (name.length < 3) {\n            nameErrorStr = \"Name must be longer than that.\";\n        } \n        \n        if (!password) {\n            passwordErrorStr = \"Oops! Your password can't be blank.\";\n        }\n\n        if (nameErrorStr == \"\") {\n            validateName(name);\n        }\n\n        if (emailErrorStr == \"\") {\n            validateEmail(email);\n        }\n        \n        if (passwordErrorStr == \"\") {\n            validatePassword(password);\n        }\n\n        setNameError(nameErrorStr);\n        setEmailError(emailErrorStr);\n        setPasswError(passwordErrorStr);\n        return nameErrorStr === \"\" && emailErrorStr === \"\" && passwordErrorStr === \"\"; //returns true and validate() is executed\n    } \n\n    const validateName = newName => {\n        //limiting input to the letters of the English alphabet\n        if(!newName.match(/^[a-z][a-z\\s]*$/)) {\n            nameErrorStr = \"Enter only letters\";\n            return false;\n        }\n        return true;\n    }\n    \n    const validateEmail = newEmail => {\n        let emailFormat = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,4}$/; \n        //email format function\n        let isValidFormat = str => {\n            return str.match(emailFormat);\n        }\n\n        if (!isValidFormat(newEmail)) {\n            emailErrorStr = \"Oops! Invalid email.\";\n            return false;\n        }\n\n        return true;\n    }\n\n    const validatePassword = newPassword => {\n        if (newPassword.length == 1 || newPassword.length < 8) {\n            passwordErrorStr = \"Password must be longer than that.\";\n            return false;\n        }\n        return true;\n    }\n\n    //validation on onClick / Create Account button\n    const handleClick = e => {\n        if (validate()) { //if there's validation\n            console.log(\"validate was called\")\n            setSuccessMessageVisible(true); //do this\n        } else {\n            return;\n        }\n    }\n\n        //dunno what this does, GOTTA GET BACK HERE\n        // context.users.push({name, email, password, balance:100});\n        // ez kell\n        // context.users.push({name, email, password});\n        // setShow(false);\n    \n\n    \n    //form input \n    //can't have same function for all 3 as in the helper code I got (right?)\n    const handleNameChange = e => {\n        // setName(e.currentTarget.value); //if there's no letter validation\n        let newName = e.currentTarget.value;\n        if (!newName || validateName(newName)) {\n            setName(newName);\n        }\n    }\n\n    const handleEmailChange = e => {\n        setEmail(e.currentTarget.value);\n    }\n\n    const handlePasswordChange = e => {        \n        setPassword(e.currentTarget.value);\n    }\n\n    const clearForm = () => {\n        setName(\"\");\n        setEmail(\"\");\n        setPassword(\"\");\n        setSuccessMessageVisible(false);\n    }\n\n    return (\n        <Card\n            bgcolor=\"info\"\n            header=\"Open Account\"\n            // status={status}\n            body={!successMessageVisible ? (  //if it's not visible, create account\n                <>\n                    <h5 className=\"create mb-4\">Open an account that fits your needs!</h5>\n\n                    <div>\n                        <div className=\"error\">{nameError}</div>\n                        <div className=\"error\">{emailError}</div>\n                        <div className=\"error\">{passwError}</div>\n                    </div>\n                    \n                    <h6 className=\"name mt-4\">Name</h6>\n                    <input type=\"input\" className=\"form-control\" id=\"name\" placeholder=\"Your name is...\" value={name} onChange={handleNameChange}/><br/>\n                    \n                    <h6>Email address</h6>\n                    <input type=\"input\" className=\"form-control\" id=\"email\" placeholder=\"Your email address is...\" value={email} onChange={handleEmailChange}/><br/>\n\n                    <h6>Password</h6>\n                    <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Create a password\" value={password} onChange={handlePasswordChange}/><br/>\n                    \n                    {/* SUBMIT BUTTON */}\n                    <button type=\"submit\" disabled={!name && !email && !password} className=\"submitBtn btn btn-light\" onClick={e => handleClick()}>Create Account</button>\n                    </>\n                    ):( //if it's visible, hide \"previous page\", show success msg and you can create a new account\n                    <>\n                    <div className=\"accountMsg mb-4\">\n                        <h6>Account succesfully created!</h6>\n                    </div>\n                    <button type=\"submit\" className=\"submitBtn btn btn-light\" onClick={clearForm}>Add another account</button>\n                </>\n            )}\n        />\n    )\n}\n\nexport default CreateAccount;"]},"metadata":{},"sourceType":"module"}