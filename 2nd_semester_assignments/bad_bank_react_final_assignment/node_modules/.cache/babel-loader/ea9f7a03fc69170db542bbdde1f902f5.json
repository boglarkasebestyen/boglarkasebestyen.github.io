{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/2nd semester/bad_bank_assignment/bad_bank_react/src/CreateAccount.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext, useContext } from \"react\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CreateAccount() {\n  _s();\n\n  const [show, setShow] = useState(true);\n  const [status, setStatus] = useState(\"\");\n  let [name, setName] = useState(\"\");\n  let [email, setEmail] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  let [nameErrStr, setNameErrStr] = useState(\"\");\n  let [emailErrStr, setEmailErrStr] = useState(\"\");\n  let [passwErrStr, setPasswErrStr] = useState(\"\");\n  const MyContext = /*#__PURE__*/createContext(null); //creates a Context object\n\n  const context = useContext(MyContext); //validation, given code\n  // const validate = (fieldName, statusText) => {\n  //     if (!fieldName) {\n  //         setStatus(\"Error: \" + statusText);\n  //         setTimeout(() => setStatus(\"\"), 3000); //why is setStatus(\"\") called with an empty string?\n  //         return false; //validation is false\n  //     }\n  //     return true;  //validation is true\n  // }\n\n  const validate = () => {\n    setNameErrStr(\"\");\n    setEmailErrStr(\"\");\n    setPasswErrStr(\"\");\n    let nameErrStr = \"\";\n    let emailErrStr = \"\";\n    let passwErrStr = \"\";\n\n    if (!name) {\n      nameErrStr = \"Please, enter name\";\n      console.log(\"where's the name\");\n    }\n\n    if (!email) {\n      emailErrStr = \"Please, enter email address\";\n      console.log(\"where's the email\");\n    }\n\n    if (!password) {\n      passwErrStr = \"Please, enter password\";\n      console.log(\"where's the password\");\n    }\n\n    if (nameErrStr || emailErrStr || passwErrStr) {\n      setNameErrStr(nameErrStr);\n      console.log(\"name error string: \" + nameErrStr);\n      setEmailErrStr(emailErrStr);\n      console.log(\"name error string: \" + emailErrStr);\n      setPasswErrStr(passwErrStr);\n      console.log(\"name error string: \" + passwErrStr);\n      return false;\n    }\n\n    return true;\n  }; //validation\n  //need to further check this\n\n\n  const handleCreate = e => {\n    console.log(name, email, password);\n\n    if (!validate()) {\n      return;\n    } //lenghty version\n    // if (!validate(name, 'Please enter name')) {\n    //     return;\n    // } else if(!validate(email, 'Please enter email address')) {\n    //     return;\n    // } else if(!validate(password, 'Please enter password')) {\n    //     return;\n    // }\n    //short version\n    // if (!validate(name, 'Please enter name')) return;\n    // if (!validate(email, 'Please enter email address')) return;\n    // if (!validate(password, 'Please enter password')) return;\n    // context.users.push({name, email, password, balance:100});\n    // ez kell\n    // context.users.push({name, email, password});\n    // setShow(false);\n\n  }; //when all 3 pass validate, it crashes\n  //form input \n  //can't have same function for all 3 as in helper code\n\n\n  const handleNameChange = e => {\n    setName(e.currentTarget.value);\n  };\n\n  const handleEmailChange = e => {\n    setEmail(e.currentTarget.value);\n  };\n\n  const handlePasswordChange = e => {\n    setPassword(e.currentTarget.value);\n  };\n\n  const clearForm = () => {\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n    setShow(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bgcolor: \"info\",\n    header: \"Open Account\",\n    status: status,\n    body: show ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"create mb-3\",\n        children: \"Open an account that fits your needs!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"input\",\n        className: \"form-control\",\n        id: \"name\",\n        placeholder: \"Enter name here\",\n        value: name,\n        onChange: handleNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 149\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"input\",\n        className: \"form-control\",\n        id: \"email\",\n        placeholder: \"Enter email here\",\n        value: email,\n        onChange: handleEmailChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 152\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        id: \"password\",\n        placeholder: \"Enter password here\",\n        value: password,\n        onChange: handlePasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 167\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-light\",\n        onClick: e => handleCreate(),\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-light\",\n        onClick: clearForm,\n        children: \"Add another account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateAccount, \"ahPHpZUkQ28em39G65hy51ZJ9uU=\");\n\n_c = CreateAccount;\nexport default CreateAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"sources":["/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/2nd semester/bad_bank_assignment/bad_bank_react/src/CreateAccount.js"],"names":["React","useState","createContext","useContext","Card","CreateAccount","show","setShow","status","setStatus","name","setName","email","setEmail","password","setPassword","nameErrStr","setNameErrStr","emailErrStr","setEmailErrStr","passwErrStr","setPasswErrStr","MyContext","context","validate","console","log","handleCreate","e","handleNameChange","currentTarget","value","handleEmailChange","handlePasswordChange","clearForm"],"mappings":"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","sourcesContent":["import React, {useState, createContext, useContext} from \"react\";\nimport Card from \"./Card\";\n\nfunction CreateAccount() {\n    const [show, setShow] = useState(true);\n    const [status, setStatus] = useState(\"\");\n    let [name, setName] = useState(\"\");\n    let [email, setEmail] = useState(\"\");\n    let [password, setPassword] = useState(\"\");\n    let [nameErrStr, setNameErrStr] = useState(\"\");\n    let [emailErrStr, setEmailErrStr] = useState(\"\");\n    let [passwErrStr, setPasswErrStr] = useState(\"\");\n\n\n    const MyContext = createContext(null); //creates a Context object\n    const context = useContext(MyContext);  \n  \n    //validation, given code\n    // const validate = (fieldName, statusText) => {\n    //     if (!fieldName) {\n    //         setStatus(\"Error: \" + statusText);\n    //         setTimeout(() => setStatus(\"\"), 3000); //why is setStatus(\"\") called with an empty string?\n    //         return false; //validation is false\n    //     }\n    //     return true;  //validation is true\n    // }\n\n    const validate = () => {\n        setNameErrStr(\"\");\n        setEmailErrStr(\"\");\n        setPasswErrStr(\"\");\n\n        let nameErrStr = \"\";\n        let emailErrStr = \"\";\n        let passwErrStr = \"\";\n\n        if(!name) {\n            nameErrStr = \"Please, enter name\";\n            console.log(\"where's the name\")\n\n        }\n\n        if(!email) {\n            emailErrStr = \"Please, enter email address\"\n            console.log(\"where's the email\")\n\n        }\n\n        if(!password) {\n            passwErrStr = \"Please, enter password\"\n            console.log(\"where's the password\")\n        }\n\n        if(nameErrStr || emailErrStr || passwErrStr) {\n            setNameErrStr(nameErrStr);\n            console.log(\"name error string: \" + nameErrStr)\n            setEmailErrStr(emailErrStr);\n            console.log(\"name error string: \" + emailErrStr)\n            setPasswErrStr(passwErrStr);\n            console.log(\"name error string: \" + passwErrStr)\n            return false;\n        }\n        return true;\n    }\n\n    //validation\n    //need to further check this\n    const handleCreate = e => {\n        console.log(name, email, password);\n\n        if(!validate()) {\n            return;\n        }\n        \n        //lenghty version\n        // if (!validate(name, 'Please enter name')) {\n        //     return;\n        // } else if(!validate(email, 'Please enter email address')) {\n        //     return;\n        // } else if(!validate(password, 'Please enter password')) {\n        //     return;\n        // }\n\n        //short version\n        // if (!validate(name, 'Please enter name')) return;\n        // if (!validate(email, 'Please enter email address')) return;\n        // if (!validate(password, 'Please enter password')) return;\n        \n\n\n        // context.users.push({name, email, password, balance:100});\n        // ez kell\n        // context.users.push({name, email, password});\n        // setShow(false);\n    }    \n    //when all 3 pass validate, it crashes\n\n    \n    //form input \n    //can't have same function for all 3 as in helper code\n    const handleNameChange = e => {\n        setName(e.currentTarget.value);\n    }\n\n    const handleEmailChange = e => {\n        setEmail(e.currentTarget.value);\n    }\n\n    const handlePasswordChange = e => {\n        setPassword(e.currentTarget.value);\n    }\n\n\n    const clearForm = () => {\n        setName(\"\")\n        setEmail(\"\")\n        setPassword(\"\")\n        setShow(true);\n    }\n\n    return (\n        <Card\n            bgcolor=\"info\"\n            header=\"Open Account\"\n            status={status}\n            body={show ? (  \n                <>\n                    <h5 className=\"create mb-3\">Open an account that fits your needs!</h5>\n                    <h6>Name</h6>\n                    <input type=\"input\" className=\"form-control\" id=\"name\" placeholder=\"Enter name here\" value={name} onChange={handleNameChange} /><br/>\n                    <h6>Email address</h6>\n                    <input type=\"input\" className=\"form-control\" id=\"email\" placeholder=\"Enter email here\" value={email} onChange={handleEmailChange}/><br/>\n                    <h6>Password</h6>\n                    <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Enter password here\" value={password} onChange={handlePasswordChange}/><br/>\n                    <button type=\"submit\" className=\"btn btn-light\" onClick={e => handleCreate()}>Create Account</button>\n                    </>\n                    ):(\n                    <>\n                    <h6>Success</h6>\n                    <button type=\"submit\" className=\"btn btn-light\" onClick={clearForm}>Add another account</button>\n                </>\n            )}\n        />\n    )\n}\n\nexport default CreateAccount;"]},"metadata":{},"sourceType":"module"}