{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/2nd semester/week15/Working With Simple Components_starter/Fetch_Data_Exercise/fetch_data_react/src/App.js\",\n    _s = $RefreshSig$();\n\n//I had to install and do all imports, none were given in the file\nimport React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Axios from \"axios\"; // function App() {\n//   // const { useState, useEffect } = React;\n//   // const { Container } = ReactBootstrap;\n//   const [data, setData] = useState({ hits: [] });\n//   const [url, setUrl] = useState(\"http://localhost:8080/data.json\");\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [query, setQuery] = useState(\"\");\n//   console.log(\"Rendering App\");\n//   /*\n//   - useEffect() doesn't cause a re-render\n//   - it's an asynchronous function\n//   - will only cause a re-render if we put something in the array here:\n//   fetchData();\n//   }, []); --> here\n//   - so if we do, it'll cause constant fetching of data and re-rendering\n//   - if we don't, it'll render, fetch the data, and re-render once\n//   */\n//   useEffect(() => { \n//     console.log(\"Fetching data...\");\n//     const fetchData = async () => {\n//       const result = await Axios(url); //Axios, not \"axios\"\n//       setData(result.data);\n//       setIsLoading(false);\n//     };\n//     fetchData(); //calling the same function we just defined above\n//   }, []);\n//   return (\n//     <Container>\n//       <input\n//         type=\"text\"\n//         value={query}\n//         onChange={event => setQuery(event.target.value)}\n//       />\n//       <button\n//         type=\"button\"\n//         onClick={() => setUrl(\"http://localhost:8080/data.json\")}\n//       >\n//         Search\n//       </button>\n//       {isLoading ? (\n//         <div>Loading ...</div>\n//       ) : (\n//         <ul>\n//           {data.hits.map(item => (\n//             <li key={item.objectID}>\n//               <a href={item.url}>{item.title}</a>\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n//     </Container>\n//   );\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const { Container } = ReactBootstrap;\n  // const { useState, useEffect } = React;\n  const [data, setData] = useState({\n    hits: []\n  });\n  const [query, setQuery] = useState(\"MIT\");\n  const [isError, setIsError] = useState(false);\n  const [url, setUrl] = useState(\"https://hn.algolia.com/api/v1/search?query=MIT\");\n  const [isLoading, setIsLoading] = useState(false);\n  console.log(\"Rendering App\");\n  useEffect(() => {\n    // handles the lifecycle events\n    console.log(\"Fetching data...\");\n\n    const fetchData = async () => {\n      setIsLoading(true);\n\n      try {\n        const result = await Axios(url);\n        setData(result.data);\n      } catch (error) {\n        setIsError(true);\n      }\n\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => {\n        setUrl(`http://hn.algolia.com/api/v1/search?query=${query}`);\n        event.preventDefault();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: event => setQuery(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), isError && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Something went wrong ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.hits.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: item.url,\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this)\n      }, item.objectID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"aFrOaEYarP1TP2GnXvdrIJiXLzw=\");\n\n_c = App;\nexport default App; // ========================================\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\n//  // \"https://hn.algolia.com/api/v1/search?query=redux\"\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/2nd semester/week15/Working With Simple Components_starter/Fetch_Data_Exercise/fetch_data_react/src/App.js"],"names":["React","useState","useEffect","Container","Axios","App","data","setData","hits","query","setQuery","isError","setIsError","url","setUrl","isLoading","setIsLoading","console","log","fetchData","result","error","event","preventDefault","target","value","map","item","title","objectID"],"mappings":"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","sourcesContent":["//I had to install and do all imports, none were given in the file\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Axios from \"axios\";\r\n\r\n\r\n// function App() {\r\n//   // const { useState, useEffect } = React;\r\n//   // const { Container } = ReactBootstrap;\r\n//   const [data, setData] = useState({ hits: [] });\r\n//   const [url, setUrl] = useState(\"http://localhost:8080/data.json\");\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const [query, setQuery] = useState(\"\");\r\n\r\n//   console.log(\"Rendering App\");\r\n\r\n//   /*\r\n//   - useEffect() doesn't cause a re-render\r\n//   - it's an asynchronous function\r\n//   - will only cause a re-render if we put something in the array here:\r\n\r\n//   fetchData();\r\n//   }, []); --> here\r\n\r\n//   - so if we do, it'll cause constant fetching of data and re-rendering\r\n//   - if we don't, it'll render, fetch the data, and re-render once\r\n//   */\r\n//   useEffect(() => { \r\n//     console.log(\"Fetching data...\");\r\n//     const fetchData = async () => {\r\n//       const result = await Axios(url); //Axios, not \"axios\"\r\n//       setData(result.data);\r\n//       setIsLoading(false);\r\n//     };\r\n\r\n//     fetchData(); //calling the same function we just defined above\r\n//   }, []);\r\n\r\n//   return (\r\n//     <Container>\r\n//       <input\r\n//         type=\"text\"\r\n//         value={query}\r\n//         onChange={event => setQuery(event.target.value)}\r\n//       />\r\n//       <button\r\n//         type=\"button\"\r\n//         onClick={() => setUrl(\"http://localhost:8080/data.json\")}\r\n//       >\r\n//         Search\r\n//       </button>\r\n\r\n//       {isLoading ? (\r\n//         <div>Loading ...</div>\r\n//       ) : (\r\n//         <ul>\r\n//           {data.hits.map(item => (\r\n//             <li key={item.objectID}>\r\n//               <a href={item.url}>{item.title}</a>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       )}\r\n//     </Container>\r\n//   );\r\n// }\r\n\r\n\r\nfunction App() {\r\n  // const { Container } = ReactBootstrap;\r\n  // const { useState, useEffect } = React;\r\n\r\n  const [data, setData] = useState({ hits: [] });\r\n  const [query, setQuery] = useState(\"MIT\");\r\n  const [isError, setIsError] = useState(false);\r\n  const [url, setUrl] = useState(\r\n    \"https://hn.algolia.com/api/v1/search?query=MIT\"\r\n  );\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  console.log(\"Rendering App\");\r\n  \r\n  useEffect(() => {   // handles the lifecycle events\r\n    console.log(\"Fetching data...\");\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const result = await Axios(url);\r\n        setData(result.data);\r\n      } catch (error) {\r\n        setIsError(true);\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <Container>\r\n      <form\r\n        onSubmit={event => {\r\n          setUrl(`http://hn.algolia.com/api/v1/search?query=${query}`);\r\n\r\n          event.preventDefault();\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          value={query}\r\n          onChange={event => setQuery(event.target.value)}\r\n        />\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n      {isError && <div>Something went wrong ...</div>}\r\n\r\n      {isLoading ? (\r\n        <div>Loading ...</div>\r\n      ) : (\r\n        <ul>\r\n          {data.hits.map(item => (\r\n            <li key={item.objectID}>\r\n              <a href={item.url}>{item.title}</a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n// ========================================\r\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n//  // \"https://hn.algolia.com/api/v1/search?query=redux\"\r\n"]},"metadata":{},"sourceType":"module"}