{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/2nd semester/week15/Working With Simple Components_starter/Fetch_Data_Exercise/fetch_data_react/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n//I had to install and do all imports, none were given in the file\nimport React, { useState, useEffect, useReducer, Fragment } from \"react\"; // import Container from \"react-bootstrap/Container\";\n\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useDataApi = (initialUrl, initialData) => {\n  _s();\n\n  // const { useState, useEffect, useReducer } = React;\n  const [url, setUrl] = useState(initialUrl);\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isError: false,\n    data: initialData\n  });\n  useEffect(() => {\n    let didCancel = false;\n\n    const fetchData = async () => {\n      dispatch({\n        type: \"FETCH_INIT\"\n      });\n\n      try {\n        const result = await Axios(url);\n\n        if (!didCancel) {\n          dispatch({\n            type: \"FETCH_SUCCESS\",\n            payload: result.data\n          });\n        }\n      } catch (error) {\n        if (!didCancel) {\n          dispatch({\n            type: \"FETCH_FAILURE\"\n          });\n        }\n      }\n    };\n\n    fetchData();\n    return () => {\n      didCancel = true;\n    };\n  }, [url]);\n  return [state, setUrl];\n};\n\n_s(useDataApi, \"hLtIa/8PNel8hKje4171nf0GGnQ=\");\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_INIT\":\n      return { ...state,\n        isLoading: true,\n        isError: false\n      };\n\n    case \"FETCH_SUCCESS\":\n      return { ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload\n      };\n\n    case \"FETCH_FAILURE\":\n      return { ...state,\n        isLoading: false,\n        isError: true\n      };\n\n    default:\n      throw new Error();\n  }\n};\n\nfunction App() {\n  _s2();\n\n  // const { Fragment, useState, useEffect, useReducer } = React;\n  const [query, setQuery] = useState(\"MIT\"); //writing a custom hook\n  //returns 3 states and a function\n\n  const [{\n    data,\n    isLoading,\n    isError\n  }, doFetch] = useDataApi(\"https://hn.algolia.com/api/v1/search?query=MIT\", {\n    hits: []\n  });\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => {\n        doFetch(`http://hn.algolia.com/api/v1/search?query=${query}`);\n        event.preventDefault();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: event => setQuery(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), isError && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Something went wrong ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.hits.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: item.url,\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)\n      }, item.objectID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n} // // ========================================\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\n\n\n_s2(App, \"40JSgjRJabgphwnWprkQfR5XfJ8=\", false, function () {\n  return [useDataApi];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/2nd semester/week15/Working With Simple Components_starter/Fetch_Data_Exercise/fetch_data_react/src/App.js"],"names":["React","useState","useEffect","useReducer","Fragment","Axios","useDataApi","initialUrl","initialData","url","setUrl","state","dispatch","dataFetchReducer","isLoading","isError","data","didCancel","fetchData","type","result","payload","error","action","Error","App","query","setQuery","doFetch","hits","event","preventDefault","target","value","map","item","title","objectID"],"mappings":"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","sourcesContent":["//I had to install and do all imports, none were given in the file\r\n\r\nimport React, {useState, useEffect, useReducer, Fragment} from \"react\";\r\n// import Container from \"react-bootstrap/Container\";\r\nimport Axios from \"axios\";\r\n\r\nconst useDataApi = (initialUrl, initialData) => {\r\n  // const { useState, useEffect, useReducer } = React;\r\n  const [url, setUrl] = useState(initialUrl);\r\n\r\n  const [state, dispatch] = useReducer(dataFetchReducer, {\r\n    isLoading: false,\r\n    isError: false,\r\n    data: initialData\r\n  });\r\n\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n    const fetchData = async () => {\r\n      dispatch({ type: \"FETCH_INIT\" });\r\n      try {\r\n        const result = await Axios(url);\r\n        if (!didCancel) {\r\n          dispatch({ type: \"FETCH_SUCCESS\", payload: result.data });\r\n        }\r\n      } catch (error) {\r\n        if (!didCancel) {\r\n          dispatch({ type: \"FETCH_FAILURE\" });\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, [url]);\r\n  return [state, setUrl];\r\n};\r\nconst dataFetchReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_INIT\":\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false\r\n      };\r\n    case \"FETCH_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: false,\r\n        data: action.payload\r\n      };\r\n    case \"FETCH_FAILURE\":\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: true\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  // const { Fragment, useState, useEffect, useReducer } = React;\r\n  const [query, setQuery] = useState(\"MIT\");\r\n  //writing a custom hook\r\n  //returns 3 states and a function\r\n  const [{ data, isLoading, isError }, doFetch] = useDataApi(\r\n    \"https://hn.algolia.com/api/v1/search?query=MIT\",\r\n    {\r\n      hits: []\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <form\r\n        onSubmit={event => {\r\n          doFetch(`http://hn.algolia.com/api/v1/search?query=${query}`);\r\n\r\n          event.preventDefault();\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          value={query}\r\n          onChange={event => setQuery(event.target.value)}\r\n        />\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n\r\n      {isError && <div>Something went wrong ...</div>}\r\n\r\n      {isLoading ? (\r\n        <div>Loading ...</div>\r\n      ) : (\r\n        <ul>\r\n          {data.hits.map(item => (\r\n            <li key={item.objectID}>\r\n              <a href={item.url}>{item.title}</a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\n// // ========================================\r\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}