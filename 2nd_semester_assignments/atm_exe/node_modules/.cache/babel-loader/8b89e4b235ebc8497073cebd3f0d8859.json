{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/2nd semester/week15/Working With Simple Components_starter/ATM_Exercise/atm_example_react/src/Account.js\";\nimport React from \"react\"; // this will simulate the bank\n// keeps track of the total amount of money\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Account = () => {\n  const ATMDeposit = () => {\n    // all of this also in the HTML version\n    let transactionState = 0; //how much money we're trying to withdraw or deposit\n\n    let totalState = 0; //running total of how much we have in our account\n\n    let status = \"Account Balance $zero\"; // compared to the HTML version, handleChange notices the manual input, too and console.logs handleChange + value (number)\n\n    const handleChange = event => {\n      console.log(`handleChange ${event.target.value}`);\n      transactionState = Number(event.target.value); //this is a change\n    }; // using the totalState variable only here\n    // using the transactionState variable only here\n\n\n    const handleSubmit = event => {\n      totalState = totalState + transactionState;\n      status = `Account Balance $ ${totalState}`;\n      document.getElementById(\"total\").innerHTML = status;\n      event.preventDefault();\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"label huge\",\n      children: [\"Deposit:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"submit\",\n        onClick: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Account Balance \", accountState]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ATMDeposit, {\n      onChange: handleChange,\n      children: \"Deposit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/2nd semester/week15/Working With Simple Components_starter/ATM_Exercise/atm_example_react/src/Account.js"],"names":["React","Account","ATMDeposit","transactionState","totalState","status","handleChange","event","console","log","target","value","Number","handleSubmit","document","getElementById","innerHTML","preventDefault","accountState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAGA;AACA;;;;AACA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAMC,UAAU,GAAG,MAAM;AACvB;AACA,QAAIC,gBAAgB,GAAG,CAAvB,CAFuB,CAEG;;AAC1B,QAAIC,UAAU,GAAG,CAAjB,CAHuB,CAGH;;AACpB,QAAIC,MAAM,GAAG,uBAAb,CAJuB,CAMvB;;AACA,UAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeF,KAAK,CAACG,MAAN,CAAaC,KAAM,EAA/C;AACAR,MAAAA,gBAAgB,GAAGS,MAAM,CAACL,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAzB,CAF4B,CAEmB;AAChD,KAHD,CAPuB,CAYvB;AACA;;;AACA,UAAME,YAAY,GAAGN,KAAK,IAAI;AAC5BH,MAAAA,UAAU,GAAGA,UAAU,GAAGD,gBAA1B;AACAE,MAAAA,MAAM,GAAI,qBAAoBD,UAAW,EAAzC;AACAU,MAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,SAAjC,GAA6CX,MAA7C;AACAE,MAAAA,KAAK,CAACU,cAAN;AACD,KALD;;AAMA,wBACE;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA,0CAEE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,QAAQ,EAAEX;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAoC,QAAA,OAAO,EAAEO;AAA7C;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD,GA3BD;;AA4BA,sBACE;AAAM,IAAA,QAAQ,EAAEA,YAAhB;AAAA,4BACI;AAAA,qCAAqBK,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAEZ,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAnCD;;KAAML,O;AAqCN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\r\n\r\n\r\n// this will simulate the bank\r\n// keeps track of the total amount of money\r\nconst Account = () => {\r\n  const ATMDeposit = () => {\r\n    // all of this also in the HTML version\r\n    let transactionState = 0; //how much money we're trying to withdraw or deposit\r\n    let totalState = 0; //running total of how much we have in our account\r\n    let status = \"Account Balance $zero\";\r\n  \r\n    // compared to the HTML version, handleChange notices the manual input, too and console.logs handleChange + value (number)\r\n    const handleChange = event => {\r\n      console.log(`handleChange ${event.target.value}`);\r\n      transactionState = Number(event.target.value); //this is a change\r\n    };\r\n  \r\n    // using the totalState variable only here\r\n    // using the transactionState variable only here\r\n    const handleSubmit = event => {\r\n      totalState = totalState + transactionState;\r\n      status = `Account Balance $ ${totalState}`;\r\n      document.getElementById(\"total\").innerHTML = status;\r\n      event.preventDefault();\r\n    };\r\n    return (\r\n      <label className=\"label huge\">\r\n        Deposit:\r\n        <input type=\"number\" onChange={handleChange}></input>\r\n        <input type=\"submit\" value=\"submit\" onClick={handleSubmit}></input>  \r\n      </label>\r\n    );\r\n  }\r\n  return(\r\n    <form onSubmit={handleSubmit}>\r\n        <h2>Account Balance {accountState}</h2>\r\n        <ATMDeposit onChange={handleChange}>Deposit</ATMDeposit>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n"]},"metadata":{},"sourceType":"module"}