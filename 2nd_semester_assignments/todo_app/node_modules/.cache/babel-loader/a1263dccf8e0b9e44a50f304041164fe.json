{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/to_github_backup/boglarkasebestyen.github.io/2nd_semester_assignments/todo_app/src/TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// user input - includes validation\nfunction TodoForm({\n  addTodo\n}) {\n  _s();\n\n  //added addTodo function as parameter\n  const [value, setValue] = React.useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    /* before the Form component, it continued like this:\r\n    const newTodos = [...todos, {text, isCompleted:false}];\r\n    setTodos(newTodos);\r\n    setTodos(newTodos);\r\n    */\n    //we'll put this into index.js\n    //the upper code depended on the state / accessing todos, but since it's not in index.js, we had to rewrite it, hence the addTodo function\n\n    addTodo(value); //this function needs to exist in index.js\n\n    setValue('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"input\",\n      value: value,\n      placeholder: \"Add Todo...\",\n      onChange: e => setValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TodoForm;\n\n_s(TodoForm, \"jByi55hotCy99CsmdWrmrBk0P1M=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/to_github_backup/boglarkasebestyen.github.io/2nd_semester_assignments/todo_app/src/TodoForm.js"],"names":["TodoForm","addTodo","value","setValue","React","useState","handleSubmit","e","preventDefault","target"],"mappings":";;;;;AAAA;AACA,SAASA,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA4B;AAAA;;AAAE;AAC5B,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBC,KAAK,CAACC,QAAN,CAAe,EAAf,CAAzB;;AAEA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAG,CAACN,KAAJ,EAAW;AACX;AACJ;AACA;AACA;AACA;AACI;AAEA;;AACAD,IAAAA,OAAO,CAACC,KAAD,CAAP,CAXwB,CAWR;;AAChBC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAbD;;AAeA,sBACE;AAAM,IAAA,QAAQ,EAAEG,YAAhB;AAAA,2BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,OAFZ;AAGE,MAAA,KAAK,EAAEJ,KAHT;AAIE,MAAA,WAAW,EAAC,aAJd;AAKE,MAAA,QAAQ,EAAEK,CAAC,IAAIJ,QAAQ,CAACI,CAAC,CAACE,MAAF,CAASP,KAAV;AALzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;KA5BQF,Q;;GAAAA,Q","sourcesContent":["// user input - includes validation\r\nfunction TodoForm({addTodo}){ //added addTodo function as parameter\r\n  const [value,setValue] = React.useState('');\r\n  \r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if(!value) return;\r\n    /* before the Form component, it continued like this:\r\n    const newTodos = [...todos, {text, isCompleted:false}];\r\n    setTodos(newTodos);\r\n    setTodos(newTodos);\r\n    */\r\n    //we'll put this into index.js\r\n\r\n    //the upper code depended on the state / accessing todos, but since it's not in index.js, we had to rewrite it, hence the addTodo function\r\n    addTodo(value); //this function needs to exist in index.js\r\n    setValue('');\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input \r\n        type=\"text\"\r\n        className=\"input\"\r\n        value={value}\r\n        placeholder=\"Add Todo...\"\r\n        onChange={e => setValue(e.target.value)} />\r\n    </form>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}