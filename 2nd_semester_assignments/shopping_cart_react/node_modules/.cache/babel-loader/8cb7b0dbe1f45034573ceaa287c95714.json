{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/2nd semester/week19/shopping_cart_react/src/Products.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n/*\r\nImport new photos from picsum  (Links to an external site.)\r\nList the price and stock of each item\r\nAdd the price at Checkout\r\nBuild the delete functionality: deleting an item from the cart should cause checkout to restock the item\r\n---------------\r\n\r\n- pics must come randomly from picsum\r\n- keep track of how many products are in stock\r\n- how much do the products cost - total in Checkout\r\n- if product stock is zero, don't add it to cart\r\n\r\n- delete the product by clicking it in the cart: \r\n    - decrement them from the product\r\n    - adjust stock / put it back in stock\r\n    - delete item from Checkout\r\n    - adjust the total price at in Checkout\r\n\r\n- restock: Submit button adds them to the cart and the checkout\r\n*/\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from \"react-bootstrap/Card\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Image from \"react-bootstrap/Image\"; // import Input from \"react-bootstrap/Input\"; //doesn't exist\n// import InputGroup from \"react-bootstrap/InputGroup\";\n// import ReactBootstrap from \"react-bootstrap\";\n\nimport Axios from \"axios\"; // simulate getting products from DataBase\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst products = [{\n  name: \"Apples\",\n  country: \"Italy\",\n  cost: 3,\n  instock: 10\n}, {\n  name: \"Oranges\",\n  country: \"Spain\",\n  cost: 4,\n  instock: 3\n}, {\n  name: \"Beans\",\n  country: \"USA\",\n  cost: 2,\n  instock: 5\n}, {\n  name: \"Cabbage\",\n  country: \"USA\",\n  cost: 1,\n  instock: 8\n}]; //=========Cart=============//\n\nconst Cart = props => {\n  // const { Card, Accordion, Button } = ReactBootstrap;\n  let data = props.location.data ? props.location.data : products;\n  console.log(`data:${JSON.stringify(data)}`);\n  return /*#__PURE__*/_jsxDEV(Accordion, {\n    defaultActiveKey: \"0\",\n    children: props.list\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Cart;\n\nconst useDataApi = (initialUrl, initialData) => {\n  _s();\n\n  // const { useState, useEffect, useReducer } = React;\n  const [url, setUrl] = useState(initialUrl);\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isError: false,\n    data: initialData\n  });\n  console.log(`useDataApi called`);\n  useEffect(() => {\n    console.log(\"useEffect Called\");\n    let didCancel = false;\n\n    const fetchData = async () => {\n      dispatch({\n        type: \"FETCH_INIT\"\n      });\n\n      try {\n        const result = await Axios(url);\n        console.log(\"FETCH FROM URl\");\n\n        if (!didCancel) {\n          dispatch({\n            type: \"FETCH_SUCCESS\",\n            payload: result.data\n          });\n        }\n      } catch (error) {\n        if (!didCancel) {\n          dispatch({\n            type: \"FETCH_FAILURE\"\n          });\n        }\n      }\n    };\n\n    fetchData();\n    return () => {\n      didCancel = true;\n    };\n  }, [url]);\n  return [state, setUrl];\n};\n\n_s(useDataApi, \"Xn0sImmEux0JkylNrmImi243RjU=\");\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_INIT\":\n      return { ...state,\n        isLoading: true,\n        isError: false\n      };\n\n    case \"FETCH_SUCCESS\":\n      return { ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload\n      };\n\n    case \"FETCH_FAILURE\":\n      return { ...state,\n        isLoading: false,\n        isError: true\n      };\n\n    default:\n      throw new Error();\n  }\n};\n\nconst Products = props => {\n  _s2();\n\n  const [items, setItems] = useState(products);\n  const [cart, setCart] = useState([]);\n  const [total, setTotal] = useState(0); // const {\n  //   Card,\n  //   Accordion,\n  //   Button,\n  //   Container,\n  //   Row,\n  //   Col,\n  //   Image,\n  //   Input,\n  // } = ReactBootstrap;\n  //  Fetch Data\n  // const { Fragment, useState, useEffect, useReducer } = React;\n\n  const [query, setQuery] = useState(\"http://localhost:1337/products\");\n  const [{\n    data,\n    isLoading,\n    isError\n  }, doFetch] = useDataApi(\"http://localhost:1337/products\", {\n    data: []\n  });\n  console.log(`Rendering Products ${JSON.stringify(data)}`); // Fetch Data\n\n  const addToCart = e => {\n    let name = e.target.name;\n    let item = items.filter(item => item.name === name);\n    console.log(`add to Cart ${JSON.stringify(item)}`);\n    setCart([...cart, ...item]); //doFetch(query);\n  };\n\n  const deleteCartItem = index => {\n    let newCart = cart.filter((item, i) => index !== i);\n    setCart(newCart);\n  };\n\n  const photos = [\"apple.png\", \"orange.png\", \"beans.png\", \"cabbage.png\"];\n  let list = items.map((item, index) => {\n    //let n = index + 1049;\n    //let url = \"https://picsum.photos/id/\" + n + \"/50/50\";\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: photos[index % 4],\n        width: 70,\n        roundedCircle: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        size: \"large\",\n        children: [item.name + \" \", \":\", item.cost]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: item.name,\n        type: \"submit\",\n        onClick: addToCart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this);\n  }); //eventKey -> eventkey correct\n  //axios -> Axios correct\n  //Accordion.Toggle -> Accordion\n\n  let cartList = cart.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(Accordion, {\n          as: Button,\n          variant: \"link\",\n          eventkey: 1 + index,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n        onClick: () => deleteCartItem(index),\n        eventkey: 1 + index,\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [\"$ \", item.cost, \" from \", item.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this);\n  });\n\n  let finalList = () => {\n    let total = checkOut();\n    let final = cart.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        index: index,\n        children: item.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this);\n    });\n    return {\n      final,\n      total\n    };\n  };\n\n  const checkOut = () => {\n    let costs = cart.map(item => item.cost);\n\n    const reducer = (accum, current) => accum + current;\n\n    let newTotal = costs.reduce(reducer, 0);\n    console.log(`total updated to ${newTotal}`);\n    return newTotal;\n  }; //TODO:\n\n\n  const restockProducts = url => {\n    doFetch(url);\n    let newItems = data.map(item => {\n      let {\n        name,\n        country,\n        cost,\n        instock\n      } = item;\n      return {\n        name,\n        country,\n        cost,\n        instock\n      };\n    });\n    setItems([...items, ...newItems]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Product List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyleType: \"none\"\n          },\n          children: list\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Cart Contents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n          children: cartList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"CheckOut \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: checkOut,\n          children: [\"CheckOut $ \", finalList().total]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", finalList().total > 0 && finalList().final, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: event => {\n          restockProducts(`http://localhost:1337/${query}`);\n          console.log(`Restock called on ${query}`);\n          event.preventDefault();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: query,\n          onChange: event => setQuery(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"ReStock Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Products, \"pGfdKmwea/dVjZlVozc0Aljj7Ac=\", false, function () {\n  return [useDataApi];\n});\n\n_c2 = Products;\nexport default Products;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Cart\");\n$RefreshReg$(_c2, \"Products\");","map":{"version":3,"sources":["/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/2nd semester/week19/shopping_cart_react/src/Products.js"],"names":["React","useState","useEffect","useReducer","Card","Accordion","Button","Container","Row","Col","Image","Axios","products","name","country","cost","instock","Cart","props","data","location","console","log","JSON","stringify","list","useDataApi","initialUrl","initialData","url","setUrl","state","dispatch","dataFetchReducer","isLoading","isError","didCancel","fetchData","type","result","payload","error","action","Error","Products","items","setItems","cart","setCart","total","setTotal","query","setQuery","doFetch","addToCart","e","target","item","filter","deleteCartItem","index","newCart","i","photos","map","cartList","finalList","checkOut","final","costs","reducer","accum","current","newTotal","reduce","restockProducts","newItems","listStyleType","event","preventDefault","value"],"mappings":"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","sourcesContent":["/*\r\nImport new photos from picsum  (Links to an external site.)\r\nList the price and stock of each item\r\nAdd the price at Checkout\r\nBuild the delete functionality: deleting an item from the cart should cause checkout to restock the item\r\n---------------\r\n\r\n- pics must come randomly from picsum\r\n- keep track of how many products are in stock\r\n- how much do the products cost - total in Checkout\r\n- if product stock is zero, don't add it to cart\r\n\r\n- delete the product by clicking it in the cart: \r\n    - decrement them from the product\r\n    - adjust stock / put it back in stock\r\n    - delete item from Checkout\r\n    - adjust the total price at in Checkout\r\n\r\n- restock: Submit button adds them to the cart and the checkout\r\n*/\r\n\r\nimport React, {useState, useEffect, useReducer} from 'react';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Accordion from  \"react-bootstrap/Accordion\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Image from \"react-bootstrap/Image\";\r\n// import Input from \"react-bootstrap/Input\"; //doesn't exist\r\n// import InputGroup from \"react-bootstrap/InputGroup\";\r\n\r\n// import ReactBootstrap from \"react-bootstrap\";\r\nimport Axios from \"axios\";\r\n\r\n// simulate getting products from DataBase\r\nconst products = [\r\n  { name: \"Apples\", country: \"Italy\", cost: 3, instock: 10 },\r\n  { name: \"Oranges\", country: \"Spain\", cost: 4, instock: 3 },\r\n  { name: \"Beans\", country: \"USA\", cost: 2, instock: 5 },\r\n  { name: \"Cabbage\", country: \"USA\", cost: 1, instock: 8 },\r\n];\r\n\r\n\r\n//=========Cart=============//\r\nconst Cart = (props) => {\r\n  // const { Card, Accordion, Button } = ReactBootstrap;\r\n  let data = props.location.data ? props.location.data : products;\r\n  console.log(`data:${JSON.stringify(data)}`);\r\n\r\n  return <Accordion defaultActiveKey=\"0\">{props.list}</Accordion>;\r\n};\r\n\r\nconst useDataApi = (initialUrl, initialData) => {\r\n  // const { useState, useEffect, useReducer } = React;\r\n  const [url, setUrl] = useState(initialUrl);\r\n\r\n  const [state, dispatch] = useReducer(dataFetchReducer, {\r\n    isLoading: false,\r\n    isError: false,\r\n    data: initialData,\r\n  });\r\n\r\n  console.log(`useDataApi called`);\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect Called\");\r\n    let didCancel = false;\r\n    const fetchData = async () => {\r\n      dispatch({ type: \"FETCH_INIT\" });\r\n      try {\r\n        const result = await Axios(url);\r\n        console.log(\"FETCH FROM URl\");\r\n        if (!didCancel) {\r\n          dispatch({ type: \"FETCH_SUCCESS\", payload: result.data });\r\n        }\r\n      } catch (error) {\r\n        if (!didCancel) {\r\n          dispatch({ type: \"FETCH_FAILURE\" });\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, [url]);\r\n  return [state, setUrl];\r\n};\r\n\r\n\r\nconst dataFetchReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_INIT\":\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false,\r\n      };\r\n    case \"FETCH_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: false,\r\n        data: action.payload,\r\n      };\r\n    case \"FETCH_FAILURE\":\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: true,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst Products = (props) => {\r\n  const [items, setItems] = useState(products);\r\n  const [cart, setCart] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  // const {\r\n  //   Card,\r\n  //   Accordion,\r\n  //   Button,\r\n  //   Container,\r\n  //   Row,\r\n  //   Col,\r\n  //   Image,\r\n  //   Input,\r\n  // } = ReactBootstrap;\r\n  //  Fetch Data\r\n  // const { Fragment, useState, useEffect, useReducer } = React;\r\n  const [query, setQuery] = useState(\"http://localhost:1337/products\");\r\n  const [{ data, isLoading, isError }, doFetch] = useDataApi(\r\n    \"http://localhost:1337/products\",\r\n    {\r\n      data: [],\r\n    }\r\n  );\r\n  console.log(`Rendering Products ${JSON.stringify(data)}`);\r\n\r\n  // Fetch Data\r\n  const addToCart = (e) => {\r\n    let name = e.target.name;\r\n    let item = items.filter((item) => item.name === name);\r\n    console.log(`add to Cart ${JSON.stringify(item)}`);\r\n    setCart([...cart, ...item]);\r\n    //doFetch(query);\r\n  };\r\n\r\n  const deleteCartItem = (index) => {\r\n    let newCart = cart.filter((item, i) => index !== i);\r\n    setCart(newCart);\r\n  };\r\n  \r\n  const photos = [\"apple.png\", \"orange.png\", \"beans.png\", \"cabbage.png\"];\r\n\r\n  let list = items.map((item, index) => {\r\n    //let n = index + 1049;\r\n    //let url = \"https://picsum.photos/id/\" + n + \"/50/50\";\r\n\r\n    return (\r\n      <li key={index}>\r\n        <Image src={photos[index % 4]} width={70} roundedCircle></Image>\r\n        <Button variant=\"primary\" size=\"large\">\r\n          {item.name + \" \"}:{item.cost}\r\n        </Button>\r\n        <input name={item.name} type=\"submit\" onClick={addToCart}></input>\r\n      </li>\r\n    );\r\n  });\r\n\r\n//eventKey -> eventkey correct\r\n//axios -> Axios correct\r\n//Accordion.Toggle -> Accordion\r\n\r\n  let cartList = cart.map((item, index) => {\r\n    return (\r\n      <Card key={index}>\r\n        <Card.Header>\r\n          <Accordion as={Button} variant=\"link\" eventkey={1 + index}>\r\n            {item.name}\r\n          </Accordion>\r\n        </Card.Header>\r\n        <Accordion.Collapse\r\n          onClick={() => deleteCartItem(index)}\r\n          eventkey={1 + index}\r\n        >\r\n          <Card.Body>\r\n            $ {item.cost} from {item.country}\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    );\r\n  });\r\n\r\n  let finalList = () => {\r\n    let total = checkOut();\r\n    let final = cart.map((item, index) => {\r\n      return (\r\n        <div key={index} index={index}>\r\n          {item.name}\r\n        </div>\r\n      );\r\n    });\r\n    return { final, total };\r\n  };\r\n\r\n  const checkOut = () => {\r\n    let costs = cart.map((item) => item.cost);\r\n    const reducer = (accum, current) => accum + current;\r\n    let newTotal = costs.reduce(reducer, 0);\r\n    console.log(`total updated to ${newTotal}`);\r\n    return newTotal;\r\n  };\r\n\r\n  //TODO:\r\n  const restockProducts = (url) => {\r\n    doFetch(url);\r\n    let newItems = data.map((item) => {\r\n      let { name, country, cost, instock } = item;\r\n      return { name, country, cost, instock };\r\n    });\r\n    setItems([...items, ...newItems]);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <h1>Product List</h1>\r\n          <ul style={{ listStyleType: \"none\" }}>{list}</ul>\r\n        </Col>\r\n        <Col>\r\n          <h1>Cart Contents</h1>\r\n          <Accordion>{cartList}</Accordion>\r\n        </Col>\r\n        <Col>\r\n          <h1>CheckOut </h1>\r\n          <Button onClick={checkOut}>CheckOut $ {finalList().total}</Button>\r\n          <div> {finalList().total > 0 && finalList().final} </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <form\r\n          onSubmit={(event) => {\r\n            restockProducts(`http://localhost:1337/${query}`);\r\n            console.log(`Restock called on ${query}`);\r\n            event.preventDefault();\r\n          }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            value={query}\r\n            onChange={(event) => setQuery(event.target.value)}\r\n          />\r\n          <button type=\"submit\">ReStock Products</button>\r\n        </form>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n\r\n"]},"metadata":{},"sourceType":"module"}