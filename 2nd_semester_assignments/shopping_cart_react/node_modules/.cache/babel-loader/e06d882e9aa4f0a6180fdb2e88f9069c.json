{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/2nd semester/week19/shopping_cart_react/src/Products.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect, useReducer } from 'react';\nimport ReactDOM from 'react-dom';\nimport Card from \"react-bootstrap/Card\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Image from \"react-bootstrap/Image\";\nimport App from \"./App\"; // simulate getting products from DataBase\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst products = [{\n  name: \"Apples_:\",\n  country: \"Italy\",\n  cost: 3,\n  instock: 10\n}, {\n  name: \"Oranges:\",\n  country: \"Spain\",\n  cost: 4,\n  instock: 3\n}, {\n  name: \"Beans__:\",\n  country: \"USA\",\n  cost: 2,\n  instock: 5\n}, {\n  name: \"Cabbage:\",\n  country: \"USA\",\n  cost: 1,\n  instock: 8\n}];\n\nconst useDataApi = (initialUrl, initialData) => {\n  _s();\n\n  // const { useState, useEffect, useReducer } = React;\n  const [url, setUrl] = useState(initialUrl);\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isError: false,\n    data: initialData\n  });\n  console.log(`useDataApi called`);\n  useEffect(() => {\n    console.log(\"useEffect Called\");\n    let didCancel = false;\n\n    const fetchData = async () => {\n      dispatch({\n        type: \"FETCH_INIT\"\n      });\n\n      try {\n        const result = await Axios(url);\n        console.log(\"FETCH FROM URl\");\n\n        if (!didCancel) {\n          dispatch({\n            type: \"FETCH_SUCCESS\",\n            payload: result.data\n          });\n        }\n      } catch (error) {\n        if (!didCancel) {\n          dispatch({\n            type: \"FETCH_FAILURE\"\n          });\n        }\n      }\n    };\n\n    fetchData();\n    return () => {\n      didCancel = true;\n    };\n  }, [url]);\n  return [state, setUrl];\n};\n\n_s(useDataApi, \"PDpWEFNW95GQABYu7GfNt9E8ZzY=\");\n\nconst Products = props => {\n  _s2();\n\n  const [items, setItems] = useState(products);\n  const [cart, setCart] = useState([]);\n  const [total, setTotal] = useState(0); // const {\n  //   Card,\n  //   Accordion,\n  //   Button,\n  //   Container,\n  //   Row,\n  //   Col,\n  //   Image,\n  //   Input,\n  // } = ReactBootstrap;\n  //  Fetch Data\n  // const { Fragment, useState, useEffect, useReducer } = React;\n\n  const [query, setQuery] = useState(\"http://localhost:1337/products\");\n  const [{\n    data,\n    isLoading,\n    isError\n  }, doFetch] = useDataApi(\"http://localhost:1337/products\", {\n    data: []\n  });\n  console.log(`Rendering Products ${JSON.stringify(data)}`); // Fetch Data\n\n  const addToCart = e => {\n    let name = e.target.name;\n    let item = items.filter(item => item.name == name);\n    console.log(`add to Cart ${JSON.stringify(item)}`);\n    setCart([...cart, ...item]); //doFetch(query);\n  };\n\n  const deleteCartItem = index => {\n    let newCart = cart.filter((item, i) => index != i);\n    setCart(newCart);\n  };\n\n  const photos = [\"apple.png\", \"orange.png\", \"beans.png\", \"cabbage.png\"];\n  let list = items.map((item, index) => {\n    //let n = index + 1049;\n    //let url = \"https://picsum.photos/id/\" + n + \"/50/50\";\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: photos[index % 4],\n        width: 70,\n        roundedCircle: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        size: \"large\",\n        children: [item.name, \":\", item.cost]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: item.name,\n        type: \"submit\",\n        onClick: addToCart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this);\n  });\n  let cartList = cart.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n          as: Button,\n          variant: \"link\",\n          eventKey: 1 + index,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n        onClick: () => deleteCartItem(index),\n        eventKey: 1 + index,\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [\"$ \", item.cost, \" from \", item.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this);\n  });\n\n  let finalList = () => {\n    let total = checkOut();\n    let final = cart.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        index: index,\n        children: item.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this);\n    });\n    return {\n      final,\n      total\n    };\n  };\n\n  const checkOut = () => {\n    let costs = cart.map(item => item.cost);\n\n    const reducer = (accum, current) => accum + current;\n\n    let newTotal = costs.reduce(reducer, 0);\n    console.log(`total updated to ${newTotal}`);\n    return newTotal;\n  }; // TODO: implement the restockProducts function\n\n\n  const restockProducts = url => {};\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Product List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyleType: \"none\"\n          },\n          children: list\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Cart Contents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n          children: cartList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"CheckOut \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: checkOut,\n          children: [\"CheckOut $ \", finalList().total]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", finalList().total > 0 && finalList().final, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: event => {\n          restockProducts(`http://localhost:1337/${query}`);\n          console.log(`Restock called on ${query}`);\n          event.preventDefault();\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: query,\n          onChange: event => setQuery(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"ReStock Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 7\n  }, this);\n};\n\n_s2(Products, \"pGfdKmwea/dVjZlVozc0Aljj7Ac=\", false, function () {\n  return [useDataApi];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/2nd semester/week19/shopping_cart_react/src/Products.js"],"names":["React","Fragment","useState","useEffect","useReducer","ReactDOM","Card","Accordion","Button","Container","Row","Col","Image","App","products","name","country","cost","instock","useDataApi","initialUrl","initialData","url","setUrl","state","dispatch","dataFetchReducer","isLoading","isError","data","console","log","didCancel","fetchData","type","result","Axios","payload","error","Products","props","items","setItems","cart","setCart","total","setTotal","query","setQuery","doFetch","JSON","stringify","addToCart","e","target","item","filter","deleteCartItem","index","newCart","i","photos","list","map","cartList","finalList","checkOut","final","costs","reducer","accum","current","newTotal","reduce","restockProducts","listStyleType","event","preventDefault","value"],"mappings":"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","sourcesContent":["\nimport React, { Fragment, useState, useEffect, useReducer } from 'react';\nimport ReactDOM from 'react-dom';\nimport Card from \"react-bootstrap/Card\";\nimport Accordion from  \"react-bootstrap/Accordion\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Image from \"react-bootstrap/Image\";import App from \"./App\";\n\n\n// simulate getting products from DataBase\nconst products = [\n    { name: \"Apples_:\", country: \"Italy\", cost: 3, instock: 10 },\n    { name: \"Oranges:\", country: \"Spain\", cost: 4, instock: 3 },\n    { name: \"Beans__:\", country: \"USA\", cost: 2, instock: 5 },\n    { name: \"Cabbage:\", country: \"USA\", cost: 1, instock: 8 },\n  ];\n\n\n  const useDataApi = (initialUrl, initialData) => {\n    // const { useState, useEffect, useReducer } = React;\n    const [url, setUrl] = useState(initialUrl);\n  \n    const [state, dispatch] = useReducer(dataFetchReducer, {\n      isLoading: false,\n      isError: false,\n      data: initialData,\n    });\n  \n    console.log(`useDataApi called`);\n  \n  \n    useEffect(() => {\n      console.log(\"useEffect Called\");\n      let didCancel = false;\n      const fetchData = async () => {\n        dispatch({ type: \"FETCH_INIT\" });\n        try {\n          const result = await Axios(url);\n          console.log(\"FETCH FROM URl\");\n          if (!didCancel) {\n            dispatch({ type: \"FETCH_SUCCESS\", payload: result.data });\n          }\n        } catch (error) {\n          if (!didCancel) {\n            dispatch({ type: \"FETCH_FAILURE\" });\n          }\n        }\n      };\n      fetchData();\n      return () => {\n        didCancel = true;\n      };\n    }, [url]);\n    return [state, setUrl];\n  };\n  \nconst Products = (props) => {\n    const [items, setItems] = useState(products);\n    const [cart, setCart] = useState([]);\n    const [total, setTotal] = useState(0);\n    // const {\n    //   Card,\n    //   Accordion,\n    //   Button,\n    //   Container,\n    //   Row,\n    //   Col,\n    //   Image,\n    //   Input,\n    // } = ReactBootstrap;\n\n    //  Fetch Data\n    // const { Fragment, useState, useEffect, useReducer } = React;\n    const [query, setQuery] = useState(\"http://localhost:1337/products\");\n    const [{ data, isLoading, isError }, doFetch] = useDataApi(\n      \"http://localhost:1337/products\",\n      {\n        data: [],\n      }\n    );\n    console.log(`Rendering Products ${JSON.stringify(data)}`);\n    // Fetch Data\n    const addToCart = (e) => {\n      let name = e.target.name;\n      let item = items.filter((item) => item.name == name);\n      console.log(`add to Cart ${JSON.stringify(item)}`);\n      setCart([...cart, ...item]);\n      //doFetch(query);\n    };\n    const deleteCartItem = (index) => {\n      let newCart = cart.filter((item, i) => index != i);\n      setCart(newCart);\n    };\n    const photos = [\"apple.png\", \"orange.png\", \"beans.png\", \"cabbage.png\"];\n  \n    let list = items.map((item, index) => {\n      //let n = index + 1049;\n      //let url = \"https://picsum.photos/id/\" + n + \"/50/50\";\n  \n      return (\n        <li key={index}>\n          <Image src={photos[index % 4]} width={70} roundedCircle></Image>\n          <Button variant=\"primary\" size=\"large\">\n            {item.name}:{item.cost}\n          </Button>\n          <input name={item.name} type=\"submit\" onClick={addToCart}></input>\n        </li>\n      );\n    });\n    let cartList = cart.map((item, index) => {\n      return (\n        <Card key={index}>\n          <Card.Header>\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey={1 + index}>\n              {item.name}\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse\n            onClick={() => deleteCartItem(index)}\n            eventKey={1 + index}\n          >\n            <Card.Body>\n              $ {item.cost} from {item.country}\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      );\n    });\n  \n    let finalList = () => {\n      let total = checkOut();\n      let final = cart.map((item, index) => {\n        return (\n          <div key={index} index={index}>\n            {item.name}\n          </div>\n        );\n      });\n      return { final, total };\n    };\n  \n    const checkOut = () => {\n      let costs = cart.map((item) => item.cost);\n      const reducer = (accum, current) => accum + current;\n      let newTotal = costs.reduce(reducer, 0);\n      console.log(`total updated to ${newTotal}`);\n      return newTotal;\n    };\n    // TODO: implement the restockProducts function\n    const restockProducts = (url) => {};\n  \n    return (\n      <Container>\n        <Row>\n          <Col>\n            <h1>Product List</h1>\n            <ul style={{ listStyleType: \"none\" }}>{list}</ul>\n          </Col>\n          <Col>\n            <h1>Cart Contents</h1>\n            <Accordion>{cartList}</Accordion>\n          </Col>\n          <Col>\n            <h1>CheckOut </h1>\n            <Button onClick={checkOut}>CheckOut $ {finalList().total}</Button>\n            <div> {finalList().total > 0 && finalList().final} </div>\n          </Col>\n        </Row>\n        <Row>\n          <form\n            onSubmit={(event) => {\n              restockProducts(`http://localhost:1337/${query}`);\n              console.log(`Restock called on ${query}`);\n              event.preventDefault();\n            }}\n          >\n            <input\n              type=\"text\"\n              value={query}\n              onChange={(event) => setQuery(event.target.value)}\n            />\n            <button type=\"submit\">ReStock Products</button>\n          </form>\n        </Row>\n      </Container>\n    );\n  };\n\n  export default Products;"]},"metadata":{},"sourceType":"module"}