{"ast":null,"code":"// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import ReactBootstrap from \"react-bootstrap\";\n// import App from \"./App\";\n// const Products = (props) => {\n//     const [items, setItems] = React.useState(products);\n//     const [cart, setCart] = React.useState([]);\n//     const [total, setTotal] = React.useState(0);\n//     const {\n//       Card,\n//       Accordion,\n//       Button,\n//       Container,\n//       Row,\n//       Col,\n//       Image,\n//       Input,\n//     } = ReactBootstrap;\n//     //  Fetch Data\n//     const { Fragment, useState, useEffect, useReducer } = React;\n//     const [query, setQuery] = useState(\"http://localhost:1337/products\");\n//     const [{ data, isLoading, isError }, doFetch] = useDataApi(\n//       \"http://localhost:1337/products\",\n//       {\n//         data: [],\n//       }\n//     );\n//     console.log(`Rendering Products ${JSON.stringify(data)}`);\n//     // Fetch Data\n//     const addToCart = (e) => {\n//       let name = e.target.name;\n//       let item = items.filter((item) => item.name == name);\n//       console.log(`add to Cart ${JSON.stringify(item)}`);\n//       setCart([...cart, ...item]);\n//       //doFetch(query);\n//     };\n//     const deleteCartItem = (index) => {\n//       let newCart = cart.filter((item, i) => index != i);\n//       setCart(newCart);\n//     };\n//     const photos = [\"apple.png\", \"orange.png\", \"beans.png\", \"cabbage.png\"];\n//     let list = items.map((item, index) => {\n//       //let n = index + 1049;\n//       //let url = \"https://picsum.photos/id/\" + n + \"/50/50\";\n//       return (\n//         <li key={index}>\n//           <Image src={photos[index % 4]} width={70} roundedCircle></Image>\n//           <Button variant=\"primary\" size=\"large\">\n//             {item.name}:{item.cost}\n//           </Button>\n//           <input name={item.name} type=\"submit\" onClick={addToCart}></input>\n//         </li>\n//       );\n//     });\n//     let cartList = cart.map((item, index) => {\n//       return (\n//         <Card key={index}>\n//           <Card.Header>\n//             <Accordion.Toggle as={Button} variant=\"link\" eventKey={1 + index}>\n//               {item.name}\n//             </Accordion.Toggle>\n//           </Card.Header>\n//           <Accordion.Collapse\n//             onClick={() => deleteCartItem(index)}\n//             eventKey={1 + index}\n//           >\n//             <Card.Body>\n//               $ {item.cost} from {item.country}\n//             </Card.Body>\n//           </Accordion.Collapse>\n//         </Card>\n//       );\n//     });\n//     let finalList = () => {\n//       let total = checkOut();\n//       let final = cart.map((item, index) => {\n//         return (\n//           <div key={index} index={index}>\n//             {item.name}\n//           </div>\n//         );\n//       });\n//       return { final, total };\n//     };\n//     const checkOut = () => {\n//       let costs = cart.map((item) => item.cost);\n//       const reducer = (accum, current) => accum + current;\n//       let newTotal = costs.reduce(reducer, 0);\n//       console.log(`total updated to ${newTotal}`);\n//       return newTotal;\n//     };\n//     // TODO: implement the restockProducts function\n//     const restockProducts = (url) => {};\n//     return (\n//       <Container>\n//         <Row>\n//           <Col>\n//             <h1>Product List</h1>\n//             <ul style={{ listStyleType: \"none\" }}>{list}</ul>\n//           </Col>\n//           <Col>\n//             <h1>Cart Contents</h1>\n//             <Accordion>{cartList}</Accordion>\n//           </Col>\n//           <Col>\n//             <h1>CheckOut </h1>\n//             <Button onClick={checkOut}>CheckOut $ {finalList().total}</Button>\n//             <div> {finalList().total > 0 && finalList().final} </div>\n//           </Col>\n//         </Row>\n//         <Row>\n//           <form\n//             onSubmit={(event) => {\n//               restockProducts(`http://localhost:1337/${query}`);\n//               console.log(`Restock called on ${query}`);\n//               event.preventDefault();\n//             }}\n//           >\n//             <input\n//               type=\"text\"\n//               value={query}\n//               onChange={(event) => setQuery(event.target.value)}\n//             />\n//             <button type=\"submit\">ReStock Products</button>\n//           </form>\n//         </Row>\n//       </Container>\n//     );\n//   };\n//   export default Products;","map":{"version":3,"sources":["/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/2nd semester/week19/shopping_cart_react/src/Products.js"],"names":[],"mappingssourcesContent":["\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import ReactBootstrap from \"react-bootstrap\";\n// import App from \"./App\";\n\n// const Products = (props) => {\n//     const [items, setItems] = React.useState(products);\n//     const [cart, setCart] = React.useState([]);\n//     const [total, setTotal] = React.useState(0);\n//     const {\n//       Card,\n//       Accordion,\n//       Button,\n//       Container,\n//       Row,\n//       Col,\n//       Image,\n//       Input,\n//     } = ReactBootstrap;\n\n//     //  Fetch Data\n//     const { Fragment, useState, useEffect, useReducer } = React;\n//     const [query, setQuery] = useState(\"http://localhost:1337/products\");\n//     const [{ data, isLoading, isError }, doFetch] = useDataApi(\n//       \"http://localhost:1337/products\",\n//       {\n//         data: [],\n//       }\n//     );\n//     console.log(`Rendering Products ${JSON.stringify(data)}`);\n//     // Fetch Data\n//     const addToCart = (e) => {\n//       let name = e.target.name;\n//       let item = items.filter((item) => item.name == name);\n//       console.log(`add to Cart ${JSON.stringify(item)}`);\n//       setCart([...cart, ...item]);\n//       //doFetch(query);\n//     };\n//     const deleteCartItem = (index) => {\n//       let newCart = cart.filter((item, i) => index != i);\n//       setCart(newCart);\n//     };\n//     const photos = [\"apple.png\", \"orange.png\", \"beans.png\", \"cabbage.png\"];\n  \n//     let list = items.map((item, index) => {\n//       //let n = index + 1049;\n//       //let url = \"https://picsum.photos/id/\" + n + \"/50/50\";\n  \n//       return (\n//         <li key={index}>\n//           <Image src={photos[index % 4]} width={70} roundedCircle></Image>\n//           <Button variant=\"primary\" size=\"large\">\n//             {item.name}:{item.cost}\n//           </Button>\n//           <input name={item.name} type=\"submit\" onClick={addToCart}></input>\n//         </li>\n//       );\n//     });\n//     let cartList = cart.map((item, index) => {\n//       return (\n//         <Card key={index}>\n//           <Card.Header>\n//             <Accordion.Toggle as={Button} variant=\"link\" eventKey={1 + index}>\n//               {item.name}\n//             </Accordion.Toggle>\n//           </Card.Header>\n//           <Accordion.Collapse\n//             onClick={() => deleteCartItem(index)}\n//             eventKey={1 + index}\n//           >\n//             <Card.Body>\n//               $ {item.cost} from {item.country}\n//             </Card.Body>\n//           </Accordion.Collapse>\n//         </Card>\n//       );\n//     });\n  \n//     let finalList = () => {\n//       let total = checkOut();\n//       let final = cart.map((item, index) => {\n//         return (\n//           <div key={index} index={index}>\n//             {item.name}\n//           </div>\n//         );\n//       });\n//       return { final, total };\n//     };\n  \n//     const checkOut = () => {\n//       let costs = cart.map((item) => item.cost);\n//       const reducer = (accum, current) => accum + current;\n//       let newTotal = costs.reduce(reducer, 0);\n//       console.log(`total updated to ${newTotal}`);\n//       return newTotal;\n//     };\n//     // TODO: implement the restockProducts function\n//     const restockProducts = (url) => {};\n  \n//     return (\n//       <Container>\n//         <Row>\n//           <Col>\n//             <h1>Product List</h1>\n//             <ul style={{ listStyleType: \"none\" }}>{list}</ul>\n//           </Col>\n//           <Col>\n//             <h1>Cart Contents</h1>\n//             <Accordion>{cartList}</Accordion>\n//           </Col>\n//           <Col>\n//             <h1>CheckOut </h1>\n//             <Button onClick={checkOut}>CheckOut $ {finalList().total}</Button>\n//             <div> {finalList().total > 0 && finalList().final} </div>\n//           </Col>\n//         </Row>\n//         <Row>\n//           <form\n//             onSubmit={(event) => {\n//               restockProducts(`http://localhost:1337/${query}`);\n//               console.log(`Restock called on ${query}`);\n//               event.preventDefault();\n//             }}\n//           >\n//             <input\n//               type=\"text\"\n//               value={query}\n//               onChange={(event) => setQuery(event.target.value)}\n//             />\n//             <button type=\"submit\">ReStock Products</button>\n//           </form>\n//         </Row>\n//       </Container>\n//     );\n//   };\n\n//   export default Products;"]},"metadata":{},"sourceType":"module"}