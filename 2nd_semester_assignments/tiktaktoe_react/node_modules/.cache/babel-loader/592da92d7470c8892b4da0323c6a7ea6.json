{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/2nd semester/week15/Working With Simple Components_starter/ATM_Exercise/atm_example_react/src/Account.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ATMDeposit = () => {\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"label huge\",\n    children: [\"Deposit:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"submit\",\n      onClick: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}; // this will simulate the bank\n// keeps track of the total amount of money\n\n\n_c = ATMDeposit;\n\nconst Account = () => {\n  // all of this also in the HTML version\n  let transactionState = 0; //how much money we're trying to withdraw or deposit\n\n  let totalState = 0; //running total of how much we have in our account\n\n  let status = \"Account Balance $zero\"; // compared to the HTML version, handleChange notices the manual input, too and console.logs handleChange + value (number)\n\n  const handleChange = event => {\n    console.log(`handleChange ${event.target.value}`);\n    transactionState = Number(event.target.value); //this is a change\n  }; // using the totalState variable only here\n  // using the transactionState variable only here\n\n\n  const handleSubmit = event => {\n    totalState = totalState + transactionState;\n    status = `Account Balance $ ${totalState}`;\n    document.getElementById(\"total\").innerHTML = status;\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Account Balance \", accountState]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ATMDeposit, {\n      onChange: handleChange,\n      children: \"Deposit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Account;\nexport default Account;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ATMDeposit\");\n$RefreshReg$(_c2, \"Account\");","map":{"version":3,"sources":["/Users/sebestyenboglarka/Desktop/_uWu/MIT_MERN_2021-'22/2nd semester/week15/Working With Simple Components_starter/ATM_Exercise/atm_example_react/src/Account.js"],"names":["React","ATMDeposit","handleChange","handleSubmit","Account","transactionState","totalState","status","event","console","log","target","value","Number","document","getElementById","innerHTML","preventDefault","accountState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAIvB,sBACE;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA,wCAEE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,QAAQ,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAoC,MAAA,OAAO,EAAEC;AAA7C;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAXD,C,CAaA;AACA;;;KAdMF,U;;AAeN,MAAMG,OAAO,GAAG,MAAM;AACpB;AACA,MAAIC,gBAAgB,GAAG,CAAvB,CAFoB,CAEM;;AAC1B,MAAIC,UAAU,GAAG,CAAjB,CAHoB,CAGA;;AACpB,MAAIC,MAAM,GAAG,uBAAb,CAJoB,CAMpB;;AACA,QAAML,YAAY,GAAGM,KAAK,IAAI;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeF,KAAK,CAACG,MAAN,CAAaC,KAAM,EAA/C;AACAP,IAAAA,gBAAgB,GAAGQ,MAAM,CAACL,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAzB,CAF4B,CAEmB;AAChD,GAHD,CAPoB,CAYpB;AACA;;;AACA,QAAMT,YAAY,GAAGK,KAAK,IAAI;AAC5BF,IAAAA,UAAU,GAAGA,UAAU,GAAGD,gBAA1B;AACAE,IAAAA,MAAM,GAAI,qBAAoBD,UAAW,EAAzC;AACAQ,IAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,SAAjC,GAA6CT,MAA7C;AACAC,IAAAA,KAAK,CAACS,cAAN;AACD,GALD;;AAOA,sBACE;AAAM,IAAA,QAAQ,EAAEd,YAAhB;AAAA,4BACE;AAAA,qCAAqBe,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAEhB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA3BD;;MAAME,O;AA6BN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst ATMDeposit = () => {\r\n  \r\n\r\n\r\n  return (\r\n    <label className=\"label huge\">\r\n      Deposit:\r\n      <input type=\"number\" onChange={handleChange}></input>\r\n      <input type=\"submit\" value=\"submit\" onClick={handleSubmit}></input>  \r\n    </label>\r\n  );\r\n};\r\n\r\n// this will simulate the bank\r\n// keeps track of the total amount of money\r\nconst Account = () => {\r\n  // all of this also in the HTML version\r\n  let transactionState = 0; //how much money we're trying to withdraw or deposit\r\n  let totalState = 0; //running total of how much we have in our account\r\n  let status = \"Account Balance $zero\";\r\n\r\n  // compared to the HTML version, handleChange notices the manual input, too and console.logs handleChange + value (number)\r\n  const handleChange = event => {\r\n    console.log(`handleChange ${event.target.value}`);\r\n    transactionState = Number(event.target.value); //this is a change\r\n  };\r\n\r\n  // using the totalState variable only here\r\n  // using the transactionState variable only here\r\n  const handleSubmit = event => {\r\n    totalState = totalState + transactionState;\r\n    status = `Account Balance $ ${totalState}`;\r\n    document.getElementById(\"total\").innerHTML = status;\r\n    event.preventDefault();\r\n  };\r\n\r\n  return(\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Account Balance {accountState}</h2>\r\n      <ATMDeposit onChange={handleChange}>Deposit</ATMDeposit>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n"]},"metadata":{},"sourceType":"module"}